
&НаКлиенте
Процедура ОчиститьБазу(Команда)
	ОчиститьБазуНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОчиститьБазуНаСервере()
	ОчиститьПоОтборуБД();
КонецПроцедуры


#Область  ОчисткаБД

Процедура ЗаписатьОчиститьРСПоИмени(ИмяРС, Данные = Неопределено, Отбор = Неопределено, ИмяПоляОтбора = "")
	
	Набор = РегистрыСведений[ИмяРС].СоздатьНаборЗаписей();  
	
	Если Данные <> Неопределено Тогда
		Набор.Загрузить(Данные);	
	КонецЕсли;
	
	Если Отбор <> Неопределено Тогда
		Набор.Отбор[ИмяПоляОтбора].Установить(Отбор); 
		Набор.Прочитать();
		Набор.Очистить();
	КонецЕсли;
	
	Набор.ОбменДанными.Загрузка = Истина;
	Набор.Записать();
	
КонецПроцедуры 


Функция ТекстЗапросаНаОчисткуБазы()
	Возврат

		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫРАЗИТЬ(НастройкиПользователей.Значение КАК Справочник.СтруктурныеЕдиницы).РозничныйВидЦен КАК РозничныйВидЦен
		|ПОМЕСТИТЬ ВТ_ВидЦены
		|ИЗ
		|	РегистрСведений.НастройкиПользователей КАК НастройкиПользователей
		|ГДЕ
		|	ИСТИНА
		|	И НастройкиПользователей.Настройка.Наименование = ""Основной склад""
		|	И ВЫРАЗИТЬ(НастройкиПользователей.Значение КАК Справочник.СтруктурныеЕдиницы).РозничныйВидЦен ЕСТЬ НЕ NULL 
		|	И ВЫРАЗИТЬ(НастройкиПользователей.Значение КАК Справочник.СтруктурныеЕдиницы).РозничныйВидЦен <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЦеныНоменклатурыСрезПоследних.Период КАК Период,
		|	ЦеныНоменклатурыСрезПоследних.ВидЦен КАК ВидЦен,
		|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
		|	ЦеныНоменклатурыСрезПоследних.Характеристика КАК Характеристика,
		|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена,
		|	ЦеныНоменклатурыСрезПоследних.Актуальность КАК Актуальность,
		|	НЕОПРЕДЕЛЕНО КАК ЕдиницаИзмерения,
		|	ЦеныНоменклатурыСрезПоследних.ВалютаЦены КАК ВалютаЦены
		|ПОМЕСТИТЬ ВТ_ЦеныОтбор
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|			,
		|			ИСТИНА
		|				И Номенклатура.ПометкаУдаления = ЛОЖЬ
		|				И НЕ Номенклатура.Наименование ПОДОБНО ""%яяя%""
		|				И ВидЦен В
		|					(ВЫБРАТЬ
		|						ВТ_ВидЦены.РозничныйВидЦен КАК РозничныйВидЦен
		|					ИЗ
		|						ВТ_ВидЦены КАК ВТ_ВидЦены)) КАК ЦеныНоменклатурыСрезПоследних
		|ГДЕ
		|	ИСТИНА
		|	И ЦеныНоменклатурыСрезПоследних.Цена > 0
		|	И ЦеныНоменклатурыСрезПоследних.Актуальность = ИСТИНА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ЦеныОтбор.Период КАК Период,
		|	ВТ_ЦеныОтбор.ВидЦен КАК ВидЦен,
		|	ВТ_ЦеныОтбор.Номенклатура КАК Номенклатура,
		|	ВТ_ЦеныОтбор.Характеристика КАК Характеристика,
		|	ВТ_ЦеныОтбор.Цена КАК Цена,
		|	ВТ_ЦеныОтбор.Актуальность КАК Актуальность,
		|	НЕОПРЕДЕЛЕНО КАК ЕдиницаИзмерения,
		|	ВТ_ЦеныОтбор.ВалютаЦены КАК ВалютаЦены
		|ПОМЕСТИТЬ ВТ_ЦеныНачало
		|ИЗ
		|	ВТ_ЦеныОтбор КАК ВТ_ЦеныОтбор
		|ГДЕ
		|	ВТ_ЦеныОтбор.Цена > 0
		|	И ВТ_ЦеныОтбор.Актуальность = ИСТИНА
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЦеныНоменклатурыСрезПоследних.Период,
		|	ЦеныНоменклатурыСрезПоследних.ВидЦен,
		|	ЦеныНоменклатурыСрезПоследних.Номенклатура,
		|	ЦеныНоменклатурыСрезПоследних.Характеристика,
		|	ЦеныНоменклатурыСрезПоследних.Цена,
		|	ЦеныНоменклатурыСрезПоследних.Актуальность,
		|	НЕОПРЕДЕЛЕНО,
		|	ЦеныНоменклатурыСрезПоследних.ВалютаЦены
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|			,
		|			(Номенклатура, ВидЦен) В
		|				(ВЫБРАТЬ
		|					ВТ_Данные.Номенклатура КАК Номенклатура,
		|					&ВидЦеныПоКарте КАК ВидЦеныПоКарте
		|				ИЗ
		|					ВТ_ЦеныОтбор КАК ВТ_Данные)) КАК ЦеныНоменклатурыСрезПоследних
		|ГДЕ
		|	ИСТИНА
		|	И ЦеныНоменклатурыСрезПоследних.Цена > 0
		|	И ЦеныНоменклатурыСрезПоследних.Актуальность = ИСТИНА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_ЦеныНачало.Номенклатура КАК Номенклатура
		|ПОМЕСТИТЬ ВТ_ОтборНоменклатуры
		|ИЗ
		|	ВТ_ЦеныНачало КАК ВТ_ЦеныНачало
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НоменклатураДополнительныеРеквизиты.Ссылка
		|ИЗ
		|	ВТ_ЦеныНачало КАК ВТ_ЦеныНачало
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
		|		ПО ((ВЫРАЗИТЬ(НоменклатураДополнительныеРеквизиты.Значение КАК Справочник.Номенклатура)) = ВТ_ЦеныНачало.Номенклатура)
		|			И (НоменклатураДополнительныеРеквизиты.Свойство.ИдентификаторДляФормул = ""НоменклатураОснования"")
		|ГДЕ
		|	НоменклатураДополнительныеРеквизиты.Ссылка.ПометкаУдаления = ЛОЖЬ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Номенклатура_.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура_
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтборНоменклатуры КАК ВТ_ОтборНоменклатуры
		|		ПО (ВТ_ОтборНоменклатуры.Номенклатура = Номенклатура_.Ссылка)
		|ГДЕ
		|	ВТ_ОтборНоменклатуры.Номенклатура ЕСТЬ NULL";

КонецФункции


Функция ТекстЗапросаНаОчисткуБазы_Полн()
	Возврат

		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫРАЗИТЬ(НастройкиПользователей.Значение КАК Справочник.СтруктурныеЕдиницы).РозничныйВидЦен КАК РозничныйВидЦен
		|ПОМЕСТИТЬ ВТ_ВидЦены
		|ИЗ
		|	РегистрСведений.НастройкиПользователей КАК НастройкиПользователей
		|ГДЕ
		|	НастройкиПользователей.Настройка.Наименование = ""Основной склад""
		|	И ВЫРАЗИТЬ(НастройкиПользователей.Значение КАК Справочник.СтруктурныеЕдиницы).РозничныйВидЦен ЕСТЬ НЕ NULL 
		|	И ВЫРАЗИТЬ(НастройкиПользователей.Значение КАК Справочник.СтруктурныеЕдиницы).РозничныйВидЦен <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЦеныНоменклатурыСрезПоследних.Период КАК Период,
		|	ЦеныНоменклатурыСрезПоследних.ВидЦен КАК ВидЦен,
		|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
		|	ЦеныНоменклатурыСрезПоследних.Характеристика КАК Характеристика,
		|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена,
		|	ЦеныНоменклатурыСрезПоследних.Актуальность КАК Актуальность,
		|	НЕОПРЕДЕЛЕНО КАК ЕдиницаИзмерения,
		|	ЦеныНоменклатурыСрезПоследних.ВалютаЦены КАК ВалютаЦены
		|ПОМЕСТИТЬ ВТ_ЦеныНачало
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|			,
		|			Номенклатура.ПометкаУдаления = ЛОЖЬ
		|				И НЕ Номенклатура.Наименование ПОДОБНО ""%яяя%""
		|				И ВидЦен В
		|					(ВЫБРАТЬ
		|						ВТ_ВидЦены.РозничныйВидЦен КАК РозничныйВидЦен
		|					ИЗ
		|						ВТ_ВидЦены КАК ВТ_ВидЦены)) КАК ЦеныНоменклатурыСрезПоследних
		|ГДЕ
		|	ЦеныНоменклатурыСрезПоследних.Цена > 0
		|	И ЦеныНоменклатурыСрезПоследних.Актуальность = ИСТИНА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ЦеныНачало.Номенклатура КАК Номенклатура
		|ПОМЕСТИТЬ ВТ_ОтборНоменклатуры
		|ИЗ
		|	ВТ_ЦеныНачало КАК ВТ_ЦеныНачало
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НоменклатураДополнительныеРеквизиты.Ссылка
		|ИЗ
		|	Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЦеныНачало КАК ВТ_ЦеныНачало
		|		ПО ((ВЫРАЗИТЬ(НоменклатураДополнительныеРеквизиты.Значение КАК Справочник.Номенклатура)) = ВТ_ЦеныНачало.Номенклатура)
		|			И (НоменклатураДополнительныеРеквизиты.Свойство.ИдентификаторДляФормул = ""НоменклатураОснования"")
		|ГДЕ
		|	НоменклатураДополнительныеРеквизиты.Ссылка.ПометкаУдаления = ЛОЖЬ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВерсииОбъектов.Объект КАК Объект
		|ИЗ
		|	РегистрСведений.ВерсииОбъектов КАК ВерсииОбъектов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтборНоменклатуры КАК ВТ_ОтборНоменклатуры
		|		ПО (ВТ_ОтборНоменклатуры.Номенклатура = (ВЫРАЗИТЬ(ВерсииОбъектов.Объект КАК Справочник.Номенклатура)))
		|ГДЕ
		|	ВерсииОбъектов.Объект ССЫЛКА Справочник.Номенклатура
		|	И ВТ_ОтборНоменклатуры.Номенклатура ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоставНаборов.НоменклатураНабора КАК НоменклатураНабора,
		|	СоставНаборов.Номенклатура КАК Номенклатура
		|ИЗ
		|	РегистрСведений.СоставНаборов КАК СоставНаборов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтборНоменклатуры КАК ВТ_ОтборНоменклатуры
		|		ПО (СоставНаборов.Номенклатура = ВТ_ОтборНоменклатуры.Номенклатура
		|				ИЛИ СоставНаборов.НоменклатураНабора = ВТ_ОтборНоменклатуры.Номенклатура)
		|ГДЕ
		|	ВТ_ОтборНоменклатуры.Номенклатура ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура
		|ИЗ
		|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтборНоменклатуры КАК ВТ_ОтборНоменклатуры
		|		ПО ШтрихкодыНоменклатуры.Номенклатура = ВТ_ОтборНоменклатуры.Номенклатура
		|ГДЕ
		|	ВТ_ОтборНоменклатуры.Номенклатура ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Номенклатура_.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура_
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтборНоменклатуры КАК ВТ_ОтборНоменклатуры
		|		ПО (ВТ_ОтборНоменклатуры.Номенклатура = Номенклатура_.Ссылка)
		|ГДЕ
		|	ВТ_ОтборНоменклатуры.Номенклатура ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НастройкиЧастичногоВыбытияПродукцииИС.Номенклатура КАК Номенклатура
		|ИЗ
		|	РегистрСведений.НастройкиЧастичногоВыбытияПродукцииИС КАК НастройкиЧастичногоВыбытияПродукцииИС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтборНоменклатуры КАК ВТ_ОтборНоменклатуры
		|		ПО НастройкиЧастичногоВыбытияПродукцииИС.Номенклатура = ВТ_ОтборНоменклатуры.Номенклатура
		|ГДЕ
		|	ВТ_ОтборНоменклатуры.Номенклатура ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоставСегментаНоменклатуры.Номенклатура КАК Номенклатура
		|ИЗ
		|	РегистрСведений.СоставСегментаНоменклатуры КАК СоставСегментаНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтборНоменклатуры КАК ВТ_ОтборНоменклатуры
		|		ПО СоставСегментаНоменклатуры.Номенклатура = ВТ_ОтборНоменклатуры.Номенклатура
		|ГДЕ
		|	ВТ_ОтборНоменклатуры.Номенклатура ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОписаниеНоменклатурыИС.Номенклатура КАК Номенклатура
		|ИЗ
		|	РегистрСведений.ОписаниеНоменклатурыИС КАК ОписаниеНоменклатурыИС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтборНоменклатуры КАК ВТ_ОтборНоменклатуры
		|		ПО ОписаниеНоменклатурыИС.Номенклатура = ВТ_ОтборНоменклатуры.Номенклатура
		|ГДЕ
		|	ВТ_ОтборНоменклатуры.Номенклатура ЕСТЬ NULL";

КонецФункции


Функция ОчиститьПоОтборуБД()  Экспорт 
	//
	//Если РежимОтладки = Истина Тогда
	//	Возврат;	
	//КонецЕсли; 
	
	НачатьТранзакцию();   
	
	Попытка
		
		Начало = ТекущаяДатаСеанса();
		
		//Д.УстановкаЦен  
		ВДЗ = Документы.УстановкаЦенНоменклатуры.Выбрать();
		Пока ВДЗ.Следующий() Цикл
        	Док = ВДЗ.ПолучитьОбъект();
			Док.Удалить(); //непосредственное удаление    
			Если РежимОтладки = Истина Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если РежимОтладки = Ложь Тогда
			//01 Очистка не нужных РС
			ЗаписатьОчиститьРСПоИмени("СП_ДанныеНаОтправкуВРТ"); //2,3 млн
			ЗаписатьОчиститьРСПоИмени("ЗамерыВремени"); //63.5 т
			ЗаписатьОчиститьРСПоИмени("ЗамерыВремениТехнологические");
			ЗаписатьОчиститьРСПоИмени("ЗамерыСтатистики"); //7,3 т
			ЗаписатьОчиститьРСПоИмени("ОрганизацииВКоторыхРаботалиСотрудники"); //16 т
			ЗаписатьОчиститьРСПоИмени("СоставСегментаНоменклатуры"); //28 т 
		КонецЕсли;
		
		//02 Очистка по Номенклатуре  
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапросаНаОчисткуБазы();
		
		Запрос.УстановитьПараметр("ВидЦеныПоКарте", Справочники.ВидыЦен.НайтиПоНаименованию("ЦенаПоКарте", Истина));
		
		Пакет = Запрос.ВыполнитьПакетСПромежуточнымиДанными();  
		//НомерПакета = 1; //ЦеныНоменклатуры - 682 т
		НомерПакета = 2;
		
		Если РежимОтладки = Ложь Тогда
			ЗаписатьОчиститьРСПоИмени("ЦеныНоменклатуры"); // 682 т
			ЗаписатьОчиститьРСПоИмени("ЦеныНоменклатуры", Пакет[НомерПакета].Выгрузить()); // 682 т
		КонецЕсли;
		
		// по ведущим очистка должна быть автоматом
		////ЗаписатьОчиститьРСПоИмени("ВерсииОбъектов"); //295 т 
		//ВДЗ = Пакет[НомерПакета + 2].Выбрать();
		//
		//Пока ВДЗ.Следующий() Цикл
		//	ЗаписатьОчиститьРСПоИмени("ВерсииОбъектов",, ВДЗ.Объект, "Объект"); //295 т 
		//КонецЦикла;
		
        //СоставНаборов - 4т , -
		//ШтрихкодыНоменклатуры - 34,7 т	
		//ЗаписатьОчиститьРСПоИмени("ОписаниеНоменклатурыИС"); - 4 т
		
		//Справочник.ДисконтныеКарты -95,5 т
		
	Исключение
		Ошибка = ОписаниеОшибки();
		оду_Общий.ОтправитьСообщениеВТелеграмExchange("ОчиститьПоОтборуБД", Ошибка);	
		ОтменитьТранзакцию();
		Возврат Ошибка;
	КонецПопытки; 
	
	Если  ТранзакцияАктивна() Тогда
		ЗафиксироватьТранзакцию();
	КонецЕсли;
	
	//Справочник.Номенклатура  -44 т   
	//ВДЗ = Пакет[НомерПакета + 5].Выбрать();
	ВДЗ = Пакет[НомерПакета + 2].Выбрать();
	//ВДЗ = Пакет[НомерПакета + 3].Выбрать();

	//Ограничение транзакции 
	ПрерватьЦикл = Ложь; 
	ОбъемТранзакции = 500;
	
	ТекТранз = ОбъемТранзакции;
	Осч = 1;
	Сч = 1; 
	КолВыборки = ВДЗ.Количество();
	
	НачатьТранзакцию();
	
	Пока ВДЗ.Следующий() И ПрерватьЦикл = Ложь Цикл
		
		Попытка
			
			Ном = ВДЗ.Ссылка.ПолучитьОбъект();
			//Если ЗначениеЗаполнено(Ном.Ссылка) Тогда
			Если Ном <> Неопределено Тогда
				Ном.Удалить(); //непосредственное удаление  
			КонецЕсли;
			Если РежимОтладки = Истина Тогда
				Прервать;
			КонецЕсли;
			
		Исключение                                 
			
			Ошибка = ОписаниеОшибки();
			оду_Общий.ОтправитьСообщениеВТелеграмExchange("ОчиститьПоОтборуБД", Ошибка);	
			ОтменитьТранзакцию();
			Возврат Ошибка;  
			
		КонецПопытки;
		
		Если Сч >= ТекТранз ИЛИ Осч = КолВыборки Тогда //Последняя запись
			//Зафиксировать транзакцию
			ЗафиксироватьТранзакцию();
			
			Если Осч <> КолВыборки Тогда //Если запись не последняя продолжаем
				ТекТранз = ОбъемТранзакции;
				Сч = 1;
				НачатьТранзакцию();
			КонецЕсли;
			
		КонецЕсли;
	
		Сч = Сч + 1;
		Осч = Осч + 1;
		
	КонецЦикла;
	
	Если  ТранзакцияАктивна() Тогда
		ЗафиксироватьТранзакцию();
	КонецЕсли;
	
	ВремяОперации = ТекущаяДатаСеанса() - Начало;
	
	 //Возврат ВремяОперации;				
	 
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = СтрШаблон("Удалено %1 номенклатуры за %2 мин", КолВыборки, ВремяОперации/60);
	Сообщение.Сообщить();
	 
	 
КонецФункции

#КонецОбласти
