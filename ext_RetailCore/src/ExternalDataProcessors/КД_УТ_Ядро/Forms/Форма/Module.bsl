Перем ВходящиеДанные;
Перем ИсходящиеДанные;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	КонтрагентНеВыгружатьВБП = Истина;
КонецПроцедуры

&НаКлиенте
Процедура Док_СсылкаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	пр_Клиент.Объект1СОкончаниеВводаТекста(Док_Ссылка, Текст, СтандартнаяОбработка); 
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	ДатаОкончания = КонецДня(ДатаОкончания);	
КонецПроцедуры


&НаКлиенте
Процедура ПВД_ОтчетКомиссионера(Команда)
	ВыполнитьВыгрузкуПоМетоду("ОтчетКомиссионера");
КонецПроцедуры

&НаКлиенте
Процедура ПВД_РеализацияТоваровУслуг(Команда)
	ВыполнитьВыгрузкуПоМетоду("РеализацияТоваровУслуг");
КонецПроцедуры

&НаКлиенте
Процедура ПВД_ПоступлениеТоваровУслугПоТЧ(Команда)
	ВыполнитьВыгрузкуПоМетоду("ПоступлениеТоваровУслуг");
КонецПроцедуры


&НаКлиенте
Процедура ПВД_ПоступлениеУслугПрочихАктивов(Команда)
	ВыполнитьВыгрузкуПоМетоду("ПоступлениеУслугПрочихАктивов");
КонецПроцедуры

&НаКлиенте
Процедура ПВД_ПриходныйКассовыйОрдер(Команда)
	ВыполнитьВыгрузкуПоМетоду("ПриходныйКассовыйОрдер");
	Если ЗначениеЗаполнено(Док_Ссылка)  Тогда
		ПодготовитьДанныеРасшифровкиПлатежаНДС(Док_Ссылка);
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПВД_РасходныйКассовыйОрдер(Команда)
	ВыполнитьВыгрузкуПоМетоду("РасходныйКассовыйОрдер");
КонецПроцедуры

&НаКлиенте
Процедура ПВД_ВозвратТоваровПоставщику(Команда)
	ВыполнитьВыгрузкуПоМетоду("ВозвратТоваровПоставщику");
КонецПроцедуры

&НаКлиенте
Процедура ПВД_ВозвратТоваровОтКлиента(Команда)
	ВыполнитьВыгрузкуПоМетоду("ВозвратТоваровОтКлиента");
КонецПроцедуры


&НаКлиенте
Процедура ВыполнитьВыгрузкуПоМетоду(Метод, Отказ = Ложь)
	
	Источник = Док_Ссылка;
	
	Парам = Новый Структура("Организация", Организация); 
	Парам.Вставить("ТекстКомментарияДляОтбора", Комментарий); 
	Парам.Вставить("ПереноситьТолькоПроведенные", ПереноситьТолькоПроведенные); 
	Парам.Вставить("ПереноситьТолькоНеПроведенные", ПереноситьТолькоНеПроведенные); 
	Парам.Вставить("Партнер", Партнер); 
	//Парам.Вставить("КонтрагентНеВыгружатьВБП", КонтрагентНеВыгружатьВБП); 
	Парам.Вставить("ТолькоПоказатьОбъектыВыгрузки", ТолькоПоказатьОбъектыВыгрузки); 
	Парам.Вставить("Док_Ссылка", Док_Ссылка); 
	
	Если Метод = "ПриходныйКассовыйОрдер" Тогда
		ВыгрузкаПКО(Парам, Отказ);
	ИначеЕсли  Метод = "ОтчетКомиссионера" Тогда
		ОтчетКомиссионераПКО();
	Иначе
		СтандартныйОтборДокументов(Парам, Метод, Отказ);
	КонецЕсли; 
	
	//Если Метод = "Реализация" Тогда
	//	СтандартныйОтборДокументов(Парам, Метод);
	//Иначе
	//	ПоступлениеТоваровУслугПоТЧНаСервере(Парам);
	//КонецЕсли;
	
КонецПроцедуры
 

Процедура СтандартныйОтборДокументов(Параметры, ТипДокументаОтбор, Отказ)
	
	
КонецПроцедуры


&НаСервере
Процедура РеализацияТоваровУслугНаСервере(Параметры)
	
		
КонецПроцедуры

&НаСервере
Процедура ПоступлениеТоваровУслугПоТЧНаСервере(Параметры)
	

КонецПроцедуры

&НаСервере
Процедура ОснвнойДоговорКлиента()
	
	//ЗначениеЗаполнено() 
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ ПЕРВЫЕ 1
	//	|	ДоговорыКонтрагентов.Ссылка КАК Ссылка
	//	|ПОМЕСТИТЬ ВТ
	//	|ИЗ
	//	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	//	|ГДЕ
	//	|	ДоговорыКонтрагентов.Владелец = &Владелец
	//	|	И ДоговорыКонтрагентов.ПометкаУдаления = ЛОЖЬ
	//	|	И ДоговорыКонтрагентов.Наименование = ""Основной договор""";
	//
	//Запрос.УстановитьПараметр(""
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//ВДЗ = РезультатЗапроса.Выбрать();
	//
	//Если ВДЗ.Следующий() Тогда
	//		
	//КонецЕсли; 
	//
КонецПроцедуры


#Область  ПКО

&НаСервере
Процедура ВыгрузкаПКО(Параметры, Отказ)

	
КонецПроцедуры

&НаСервере
Функция ТекстЗапроса_ПКО_ПоступлениеТоваровУслугПоТЧ()
	Возврат
			"ВЫБРАТЬ
			|	ДанныеШапкиДокумента.Склад.РозничныйВидЦены КАК РозничныйВидЦены,
			|	ДанныеШапкиДокумента.Валюта,
			|	ДанныеШапкиДокумента.ВалютаВзаиморасчетов
			|ПОМЕСТИТЬ ДанныеШапкиДокумента
			|ИЗ
			|	Документ.ПоступлениеТоваровУслуг КАК ДанныеШапкиДокумента
			|ГДЕ
			|	ДанныеШапкиДокумента.Ссылка = &Ссылка
			//|	И ДанныеШапкиДокумента.Дата МЕЖДУ &ДатаНачалаВыгрузкиДокументов И &ОкончаниеПериодаВыгрузки
			//|	И ДанныеШапкиДокумента.Проведен = ИСТИНА
			//|	И ДанныеШапкиДокумента.Ссылка.Организация = &Организация
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Товары.Ссылка.Организация КАК Организация,
			|	Товары.Номенклатура,
			|	Товары.Характеристика,
			|	Товары.Количество,
			|	Товары.СтавкаНДС,
			|	Товары.СуммаНДС,
			|	Товары.Цена / ЕСТЬNULL(Товары.Упаковка.Коэффициент, 1) КАК Цена,
			|	Товары.Сумма,
			|	Товары.НомерСтроки КАК НомерСтрокиДокумента,
			|	Товары.СтатьяРасходов,
			|	1 КАК Коэффициент,
			|	Товары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	Товары.НомерГТД,
			|	Товары.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
			|	Товары.СтатьяРасходов.КорреспондирующийСчет КАК КорреспондирующийСчет,
			|	Товары.СуммаСНДС,
			|	Товары.Ссылка.ВернутьМногооборотнуюТару,
			|	Товары.Ссылка.ЗакупкаПодДеятельность КАК СпособУчетаНДС,
			|	Товары.Подразделение
			|ПОМЕСТИТЬ ТоварыИУслугиДокумента
			|ИЗ
			|	Документ.ПоступлениеТоваровУслуг.Товары КАК Товары
			|ГДЕ
			|	Товары.Ссылка = &Ссылка
			|	И (НЕ Товары.Ссылка.ЕстьРасхождения
			|			ИЛИ Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
			|			ИЛИ Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Товары.Ссылка.Организация,
			|	Товары.Номенклатура,
			|	Товары.Характеристика,
			|	Товары.Количество,
			|	Товары.СтавкаНДС,
			|	Товары.СуммаНДС,
			|	Товары.Цена / ЕСТЬNULL(Товары.Упаковка.Коэффициент, 1),
			|	Товары.Сумма,
			|	Товары.НомерСтроки,
			|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка),
			|	1,
			|	Товары.Номенклатура.ЕдиницаИзмерения,
			|	Товары.НомерГТД,
			|	Товары.НомерГТД.СтранаПроисхождения,
			|	NULL,
			|	Товары.СуммаСНДС,
			|	Товары.Ссылка.ВернутьМногооборотнуюТару,
			|	Товары.Ссылка.ЗакупкаПодДеятельность,
			|	NULL
			|ИЗ
			|	Документ.ПоступлениеТоваровУслуг.ТоварыПоДаннымПоставщика КАК Товары
			|ГДЕ
			|	Товары.Ссылка = &Ссылка
			|	И Товары.Ссылка.ЕстьРасхождения
			|	И Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
			|	И Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЦеныВРознице.Цена / ЕСТЬNULL(ЦеныВРознице.Упаковка.Коэффициент, 1) * ВЫБОР
			|		КОГДА ЕСТЬNULL(КурсВалютыДокумента.Кратность, 0) > 0
			|				И ЕСТЬNULL(КурсВалютыДокумента.Курс, 0) > 0
			|				И ЕСТЬNULL(КурсыВалютВидовЦены.Кратность, 0) > 0
			|				И ЕСТЬNULL(КурсыВалютВидовЦены.Курс, 0) > 0
			|			ТОГДА КурсыВалютВидовЦены.Курс * КурсВалютыДокумента.Кратность / (КурсыВалютВидовЦены.Кратность * КурсВалютыДокумента.Курс)
			|	КОНЕЦ КАК Цена,
			|	ЦеныВРознице.Номенклатура КАК Номенклатура,
			|	ЦеныВРознице.Характеристика КАК Характеристика
			|ПОМЕСТИТЬ ЦеныВРознице
			|ИЗ
			|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|			&Дата,
			|			ВидЦены В
			|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|						ДанныеШапкиДокумента.РозничныйВидЦены
			|					ИЗ
			|						ДанныеШапкиДокумента КАК ДанныеШапкиДокумента)
			|				И Номенклатура В
			|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|						ТоварыИУслугиДокумента.Номенклатура
			|					ИЗ
			|						ТоварыИУслугиДокумента КАК ТоварыИУслугиДокумента)
			|				И Характеристика В
			|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|						ТоварыИУслугиДокумента.Характеристика
			|					ИЗ
			|						ТоварыИУслугиДокумента КАК ТоварыИУслугиДокумента)) КАК ЦеныВРознице
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютВидовЦены
			|		ПО ЦеныВРознице.Валюта = КурсыВалютВидовЦены.Валюта
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
			|				&Дата,
			|				Валюта В
			|					(ВЫБРАТЬ
			|						ДанныеШапкиДокумента.Валюта
			|					ИЗ
			|						ДанныеШапкиДокумента КАК ДанныеШапкиДокумента)) КАК КурсВалютыДокумента
			|		ПО (ИСТИНА)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура,
			|	Характеристика
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТоварыИУслугиДокумента.Организация КАК Организация,
			|	ТоварыИУслугиДокумента.Номенклатура,
			|	ТоварыИУслугиДокумента.Характеристика,
			|	ТоварыИУслугиДокумента.Количество,
			|	ТоварыИУслугиДокумента.СтавкаНДС,
			|	ТоварыИУслугиДокумента.СуммаНДС,
			|	ТоварыИУслугиДокумента.Цена,
			|	ТоварыИУслугиДокумента.Сумма,
			|	ТоварыИУслугиДокумента.НомерСтрокиДокумента,
			|	ТоварыИУслугиДокумента.СтатьяРасходов,
			|	ТоварыИУслугиДокумента.Коэффициент,
			|	ЕСТЬNULL(ЦеныВРознице.Цена, 0) КАК ЦенаВРознице,
			|	ТоварыИУслугиДокумента.Количество * ЕСТЬNULL(ЦеныВРознице.Цена, 0) КАК СуммаВРознице,
			|	ТоварыИУслугиДокумента.ЕдиницаИзмерения,
			|	ТоварыИУслугиДокумента.НомерГТД,
			|	ТоварыИУслугиДокумента.СтранаПроисхождения,
			|	ТоварыИУслугиДокумента.СуммаСНДС,
			|	ТоварыИУслугиДокумента.ВернутьМногооборотнуюТару,
			|	ТоварыИУслугиДокумента.СпособУчетаНДС,
			|	ТоварыИУслугиДокумента.Подразделение
			|ПОМЕСТИТЬ ТоварыИУслугиДокументаСЦенамиРозницы
			|ИЗ
			|	ТоварыИУслугиДокумента КАК ТоварыИУслугиДокумента
			|		ЛЕВОЕ СОЕДИНЕНИЕ ЦеныВРознице КАК ЦеныВРознице
			|		ПО ТоварыИУслугиДокумента.Номенклатура = ЦеныВРознице.Номенклатура
			|			И ТоварыИУслугиДокумента.Характеристика = ЦеныВРознице.Характеристика
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЕСТЬNULL(КурсВалютыДокумента.Курс, 1) КАК КурсВзаиморасчетов,
			|	ЕСТЬNULL(КурсВалютыДокумента.Кратность, 1) КАК КратностьВзаиморасчетов
			|ИЗ
			|	ДанныеШапкиДокумента КАК ДанныеШапкиДокумента
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
			|				&Дата,
			|				Валюта В
			|					(ВЫБРАТЬ
			|						Док.ВалютаВзаиморасчетов
			|					ИЗ
			|						ДанныеШапкиДокумента КАК Док)) КАК КурсВалютыДокумента
			|		ПО ДанныеШапкиДокумента.ВалютаВзаиморасчетов = КурсВалютыДокумента.Валюта
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТоварыДокумента.Номенклатура,
			|	ТоварыДокумента.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ТоварыДокумента.Характеристика,
			|	ТоварыДокумента.Количество,
			|	ТоварыДокумента.Цена,
			|	ТоварыДокумента.Сумма,
			|	ТоварыДокумента.СтавкаНДС,
			|	ТоварыДокумента.СтавкаНДС КАК СтавкаНДСВРознице,
			|	ТоварыДокумента.СуммаНДС,
			|	ТоварыДокумента.Коэффициент,
			|	ТоварыДокумента.ЦенаВРознице,
			|	ТоварыДокумента.СуммаВРознице,
			|	ТоварыДокумента.НомерГТД,
			|	ТоварыДокумента.СтранаПроисхождения,
			|	ТоварыДокумента.СуммаСНДС,
			|	ТоварыДокумента.СпособУчетаНДС,
			|	ТоварыДокумента.Номенклатура КАК Субконто1,
			|	""00-000001"" КАК Субконто2
			|ИЗ
			|	ТоварыИУслугиДокументаСЦенамиРозницы КАК ТоварыДокумента
			|ГДЕ
			|	ТоварыДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
			//|	(ТоварыДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
			//|			ИЛИ ТоварыДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
			//|				И НЕ ТоварыДокумента.ВернутьМногооборотнуюТару)
			|
			|УПОРЯДОЧИТЬ ПО
			|	ТоварыДокумента.НомерСтрокиДокумента
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТоварыДокумента.Номенклатура,
			|	ТоварыДокумента.Количество,
			|	ТоварыДокумента.СтавкаНДС,
			|	ТоварыДокумента.СуммаНДС,
			|	ТоварыДокумента.Цена,
			|	ТоварыДокумента.Сумма,
			|	ТоварыДокумента.СтатьяРасходов.КорреспондирующийСчет КАК КорреспондирующийСчет,
			|	ТоварыДокумента.СтатьяРасходов,
			|	ТоварыДокумента.СуммаСНДС,
			|	ТоварыДокумента.СпособУчетаНДС,
			|	ТоварыДокумента.Подразделение КАК ПодразделениеЗатрат,
			|	ТоварыДокумента.Номенклатура = &НоменклатураДоставка КАК ЭтоДоставка,
			|	ВЫБОР
			|		КОГДА ТоварыДокумента.Номенклатура = &НоменклатураДоставка
			|			ТОГДА ""Доставка""
			|		ИНАЧЕ ВЫБОР
			|				КОГДА ТоварыДокумента.Организация = &ОрганизацияАТЛ
			|					ТОГДА ""Прочие расходы""
			|				ИНАЧЕ ""Прочие затраты""
			|			КОНЕЦ
			|	КОНЕЦ КАК Содержание,
			|	ВЫБОР
			|		КОГДА ТоварыДокумента.Номенклатура = &НоменклатураДоставка
			|			ТОГДА ""Транспортные услуги""
			|		ИНАЧЕ ВЫБОР
			|				КОГДА ТоварыДокумента.Организация = &ОрганизацияАТЛ
			|					ТОГДА ""Прочие расходы""
			|				ИНАЧЕ ""Прочие затраты""
			|			КОНЕЦ
			|	КОНЕЦ КАК Субконто1,
			|	ВЫБОР
			|		КОГДА ТоварыДокумента.Номенклатура = &НоменклатураДоставка
			|			ТОГДА ""Транспортные услуги""
			|		ИНАЧЕ ВЫБОР
			|				КОГДА ТоварыДокумента.Организация = &ОрганизацияАТЛ
			|					ТОГДА ""Прочие расходы""
			|				ИНАЧЕ ""Прочие затраты""
			|			КОНЕЦ
			|	КОНЕЦ КАК СубконтоНУ1
			|ИЗ
			|	ТоварыИУслугиДокументаСЦенамиРозницы КАК ТоварыДокумента
			|ГДЕ
			|	(ТоварыДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
			|		ИЛИ ТоварыДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			//|		И ЕСТЬNULL(ТоварыДокумента.СтатьяРасходов.ВариантРаспределенияРасходов, Неопределено) <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТоварыИУслугиДокумента.Номенклатура,
			|	ТоварыИУслугиДокумента.Количество,
			|	ТоварыИУслугиДокумента.Цена,
			|	ТоварыИУслугиДокумента.Сумма
			|ИЗ
			|	ТоварыИУслугиДокумента КАК ТоварыИУслугиДокумента
			|ГДЕ
			|	ТоварыИУслугиДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
			//|	И ТоварыИУслугиДокумента.ВернутьМногооборотнуюТару
			|";

КонецФункции 

&НаСервере
Процедура ПКО_ПоступлениеТоваровУслугПоТЧНаСервере(Источник, Отказ = Ложь, ВходящиеДанные = Неопределено)
	
	
КонецПроцедуры


&НаСервере
Процедура ПКО_ПоступлениеУслугПрочихАктивов_ПоступлениеУслуг(Источник, Отказ = Ложь, ВходящиеДанные = Неопределено)
	
	Если НЕ Отказ Тогда
		
		Если ТипЗнч(ВходящиеДанные) <> Тип("Структура") Тогда
			ВходящиеДанные = Новый Структура;
		КонецЕсли;
		
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	Расходы.СуммаСНДС,
		|	Расходы.Содержание,
		|	Расходы.Количество,
		|	Расходы.Цена,
		|	Расходы.Сумма,
		|	ВЫБОР КОГДА Расходы.Ссылка.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС) ТОГДА
		|		ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		|	ИНАЧЕ
		|		Расходы.СтавкаНДС
		|	КОНЕЦ КАК СтавкаНДС,
		|	Расходы.СуммаНДС,
		|	Расходы.СтатьяРасходов,
		|	Расходы.Ссылка.ЗакупкаПодДеятельность КАК СпособУчетаНДС,
		|	Расходы.Подразделение КАК ПодразделениеЗатрат
		|ИЗ
		|	Документ.ПоступлениеУслугПрочихАктивов.Расходы КАК Расходы
		|ГДЕ
		|	Расходы.Ссылка = &Ссылка
		|	И Расходы.СтатьяРасходов.ВариантРаспределенияРасходов <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|	И Расходы.СтатьяРасходов.ВариантРаспределенияРасходов <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)");
		
		Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
		Услуги = Запрос.Выполнить().Выгрузить();
		
		ВходящиеДанные.Вставить("Услуги", Услуги);
		ВходящиеДанные.Вставить("СуммаДокумента", Услуги.Итог("СуммаСНДС"));
		
	КонецЕсли;
	
	
	Если НЕ ЗначениеЗаполнено(Источник.ДатаВходящегоДокумента)  Тогда
		Значение = Источник.Дата;	
	КонецЕсли; 
КонецПроцедуры


&НаСервере
Функция ТекстЗапросаПодготовитьДанныеРасшифровкиПлатежаНДС()
	Возврат
	"ВЫБРАТЬ
	|	ТаблицаДокумента.СтавкаНДС     КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаСНДС     КАК СуммаСНДС,
	|	ТаблицаДокумента.СуммаНДС      КАК СуммаНДС,
	|	ТаблицаДокумента.Ссылка.Валюта КАК Валюта,
	|	ТаблицаДокумента.Ссылка.Дата   КАК Дата,
	|	ТаблицаДокумента.Ссылка        КАК Заказ
	|ПОМЕСТИТЬ ТаблицаСуммНДС
	|
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В (&МассивДокументов)
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	
	//|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	СчетаФактуры.ДокументОснование КАК ДокументОснование
	//|
	//|ПОМЕСТИТЬ СчетаФактуры
	//|ИЗ
	//|	Документ.СчетФактураВыданный КАК СчетаФактуры
	//|
	//|ГДЕ
	//|	СчетаФактуры.Ссылка В (&МассивДокументов)
	//|;
	//|
	//|/////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ТаблицаДокумента.СтавкаНДС     КАК СтавкаНДС,
	//|	ТаблицаДокумента.СуммаСНДС     КАК СуммаСНДС,
	//|	ТаблицаДокумента.СуммаНДС      КАК СуммаНДС,
	//|	ТаблицаДокумента.Ссылка.Валюта КАК Валюта,
	//|	ТаблицаДокумента.Ссылка.Дата   КАК Дата,
	//|	ТаблицаДокумента.Ссылка        КАК Заказ
	//|
	//|ПОМЕСТИТЬ ТаблицаСуммНДС
	//|ИЗ
	//|	Документ.АктВыполненныхРабот.Услуги КАК ТаблицаДокумента
	//|	
	//|	ЛЕВОЕ СОЕДИНЕНИЕ
	//|		СчетаФактуры КАК СчетаФактуры
	//|	ПО
	//|		ТаблицаДокумента.Ссылка = СчетаФактуры.ДокументОснование
	//|
	//|ГДЕ
	//|	ТаблицаДокумента.Ссылка В (&МассивДокументов)
	//|	ИЛИ СчетаФактуры.ДокументОснование ЕСТЬ НЕ NULL
	//|	
	//|ОБЪЕДИНИТЬ ВСЕ
	//|	
	//|ВЫБРАТЬ
	//|	ТаблицаДокумента.СтавкаНДС     КАК СтавкаНДС,
	//|	ТаблицаДокумента.СуммаСНДС     КАК СуммаСНДС,
	//|	ТаблицаДокумента.СуммаНДС      КАК СуммаНДС,
	//|	ТаблицаДокумента.Ссылка.Валюта КАК Валюта,
	//|	ТаблицаДокумента.Ссылка.Дата   КАК Дата,
	//|	ТаблицаДокумента.Ссылка        КАК Заказ
	//|
	//|ИЗ
	//|	Документ.ВыкупВозвратнойТарыКлиентом.Товары КАК ТаблицаДокумента
	//|	
	//|	ЛЕВОЕ СОЕДИНЕНИЕ
	//|		СчетаФактуры КАК СчетаФактуры
	//|	ПО
	//|		ТаблицаДокумента.Ссылка = СчетаФактуры.ДокументОснование
	//|
	//|ГДЕ
	//|	ТаблицаДокумента.Ссылка В (&МассивДокументов)
	//|	ИЛИ СчетаФактуры.ДокументОснование ЕСТЬ НЕ NULL
	//|	
	//|ОБЪЕДИНИТЬ ВСЕ
	//|	
	//|ВЫБРАТЬ
	//|	ТаблицаДокумента.СтавкаНДС     КАК СтавкаНДС,
	//|	ТаблицаДокумента.СуммаСНДС     КАК СуммаСНДС,
	//|	ТаблицаДокумента.СуммаНДС      КАК СуммаНДС,
	//|	ТаблицаДокумента.Ссылка.Валюта КАК Валюта,
	//|	ТаблицаДокумента.Ссылка.Дата   КАК Дата,
	//|	ТаблицаДокумента.Ссылка        КАК Заказ
	//|
	//|ИЗ
	//|	Документ.ЗаказКлиента.Товары КАК ТаблицаДокумента
	//|
	//|ГДЕ
	//|	ТаблицаДокумента.Ссылка В (&МассивДокументов)
	//|	И ТаблицаДокумента.Отменено = ЛОЖЬ
	//|
	//|ОБЪЕДИНИТЬ ВСЕ
	//|	
	//|ВЫБРАТЬ
	//|	ТаблицаДокумента.СтавкаНДС     КАК СтавкаНДС,
	//|	ТаблицаДокумента.СуммаСНДС     КАК СуммаСНДС,
	//|	ТаблицаДокумента.СуммаНДС      КАК СуммаНДС,
	//|	ТаблицаДокумента.Ссылка.Валюта КАК Валюта,
	//|	ТаблицаДокумента.Ссылка.Дата   КАК Дата,
	//|	ТаблицаДокумента.Ссылка        КАК Заказ
	//|
	//|ИЗ
	//|	Документ.ЗаказПоставщику.Товары КАК ТаблицаДокумента
	//|
	//|ГДЕ
	//|	ТаблицаДокумента.Ссылка В (&МассивДокументов)
	//|	И ТаблицаДокумента.Отменено = ЛОЖЬ
	//|	
	//|ОБЪЕДИНИТЬ ВСЕ
	//|	
	//|ВЫБРАТЬ
	//|	ТаблицаДокумента.СтавкаНДС     КАК СтавкаНДС,
	//|	ТаблицаДокумента.СуммаСНДС     КАК СуммаСНДС,
	//|	ТаблицаДокумента.СуммаНДС      КАК СуммаНДС,
	//|	ТаблицаДокумента.Ссылка.Валюта КАК Валюта,
	//|	ТаблицаДокумента.Ссылка.Дата   КАК Дата,
	//|	ТаблицаДокумента.Ссылка        КАК Заказ
	//|
	//|ИЗ
	//|	Документ.ЗаявкаНаВозвратТоваровОтКлиента.ВозвращаемыеТовары КАК ТаблицаДокумента
	//|
	//|ГДЕ
	//|	ТаблицаДокумента.Ссылка В (&МассивДокументов)
	//|	И НЕ &ОплатаОтКлиента
	//|	
	//|ОБЪЕДИНИТЬ ВСЕ
	//|	
	//|ВЫБРАТЬ
	//|	ТаблицаДокумента.СтавкаНДС     КАК СтавкаНДС,
	//|	ТаблицаДокумента.СуммаСНДС     КАК СуммаСНДС,
	//|	ТаблицаДокумента.СуммаНДС      КАК СуммаНДС,
	//|	ТаблицаДокумента.Ссылка.Валюта КАК Валюта,
	//|	ТаблицаДокумента.Ссылка.Дата   КАК Дата,
	//|	ТаблицаДокумента.Ссылка        КАК Заказ
	//|
	//|ИЗ
	//|	Документ.ЗаявкаНаВозвратТоваровОтКлиента.ЗаменяющиеТовары КАК ТаблицаДокумента
	//|
	//|ГДЕ
	//|	ТаблицаДокумента.Ссылка В (&МассивДокументов)
	//|	И &ОплатаОтКлиента
	//|	
	//|ОБЪЕДИНИТЬ ВСЕ
	//|	
	//|ВЫБРАТЬ
	//|	ТаблицаДокумента.СтавкаНДС     КАК СтавкаНДС,
	//|	ТаблицаДокумента.СуммаСНДС     КАК СуммаСНДС,
	//|	ТаблицаДокумента.СуммаНДС      КАК СуммаНДС,
	//|	ТаблицаДокумента.Ссылка.Валюта КАК Валюта,
	//|	ТаблицаДокумента.Ссылка.Дата   КАК Дата,
	//|	ТаблицаДокумента.Ссылка        КАК Заказ
	//|
	//|ИЗ
	//|	Документ.ОтчетКомитенту.Товары КАК ТаблицаДокумента
	//|	
	//|	ЛЕВОЕ СОЕДИНЕНИЕ
	//|		СчетаФактуры КАК СчетаФактуры
	//|	ПО
	//|		ТаблицаДокумента.Ссылка = СчетаФактуры.ДокументОснование
	//|
	//|ГДЕ
	//|	(ТаблицаДокумента.Ссылка В (&МассивДокументов)
	//|	ИЛИ СчетаФактуры.ДокументОснование ЕСТЬ НЕ NULL)
	//|	И НЕ &ОплатаОтКлиента
	//|	
	//|ОБЪЕДИНИТЬ ВСЕ
	//|	
	//|ВЫБРАТЬ
	//|	ТаблицаДокумента.СтавкаНДСВознаграждения КАК СтавкаНДС,
	//|	ТаблицаДокумента.СуммаВознаграждения     КАК СуммаСНДС,
	//|	ТаблицаДокумента.СуммаНДСВознаграждения  КАК СуммаНДС,
	//|	ТаблицаДокумента.Ссылка.Валюта           КАК Валюта,
	//|	ТаблицаДокумента.Ссылка.Дата             КАК Дата,
	//|	ТаблицаДокумента.Ссылка        КАК Заказ
	//|
	//|ИЗ
	//|	Документ.ОтчетКомитенту КАК ТаблицаДокумента
	//|	
	//|	ЛЕВОЕ СОЕДИНЕНИЕ
	//|		СчетаФактуры КАК СчетаФактуры
	//|	ПО
	//|		ТаблицаДокумента.Ссылка = СчетаФактуры.ДокументОснование
	//|
	//|ГДЕ
	//|	(ТаблицаДокумента.Ссылка В (&МассивДокументов)
	//|	ИЛИ СчетаФактуры.ДокументОснование ЕСТЬ НЕ NULL)
	//|	И &ОплатаОтКлиента
	//|	
	//|ОБЪЕДИНИТЬ ВСЕ
	//|	
	//|ВЫБРАТЬ
	//|	ТаблицаДокумента.СтавкаНДС     КАК СтавкаНДС,
	//|	ТаблицаДокумента.СуммаСНДС     КАК СуммаСНДС,
	//|	ТаблицаДокумента.СуммаНДС      КАК СуммаНДС,
	//|	ТаблицаДокумента.Ссылка.Валюта КАК Валюта,
	//|	ТаблицаДокумента.Ссылка.Дата   КАК Дата,
	//|	ТаблицаДокумента.Ссылка        КАК Заказ
	//|
	//|ИЗ
	//|	Документ.ОтчетКомитентуОСписании.Товары КАК ТаблицаДокумента
	//|
	//|ГДЕ
	//|	ТаблицаДокумента.Ссылка В (&МассивДокументов)
	//|	
	//|ОБЪЕДИНИТЬ ВСЕ
	//|	
	//|ВЫБРАТЬ
	//|	ТаблицаДокумента.СтавкаНДС     КАК СтавкаНДС,
	//|	ТаблицаДокумента.СуммаСНДС     КАК СуммаСНДС,
	//|	ТаблицаДокумента.СуммаНДС      КАК СуммаНДС,
	//|	ТаблицаДокумента.Ссылка.Валюта КАК Валюта,
	//|	ТаблицаДокумента.Ссылка.Дата   КАК Дата,
	//|	ТаблицаДокумента.Ссылка        КАК Заказ
	//|
	//|ИЗ
	//|	Документ.ОтчетКомиссионера.Товары КАК ТаблицаДокумента
	//|	
	//|	ЛЕВОЕ СОЕДИНЕНИЕ
	//|		СчетаФактуры КАК СчетаФактуры
	//|	ПО
	//|		ТаблицаДокумента.Ссылка = СчетаФактуры.ДокументОснование
	//|
	//|ГДЕ
	//|	(ТаблицаДокумента.Ссылка В (&МассивДокументов)
	//|	ИЛИ СчетаФактуры.ДокументОснование ЕСТЬ НЕ NULL)
	//|	И &ОплатаОтКлиента
	//|	
	//|ОБЪЕДИНИТЬ ВСЕ
	//|	
	//|ВЫБРАТЬ
	//|	ТаблицаДокумента.СтавкаНДСВознаграждения КАК СтавкаНДС,
	//|	ТаблицаДокумента.СуммаВознаграждения     КАК СуммаСНДС,
	//|	ТаблицаДокумента.СуммаНДСВознаграждения  КАК СуммаНДС,
	//|	ТаблицаДокумента.Ссылка.Валюта           КАК Валюта,
	//|	ТаблицаДокумента.Ссылка.Дата             КАК Дата,
	//|	ТаблицаДокумента.Ссылка                  КАК Заказ
	//|
	//|ИЗ
	//|	Документ.ОтчетКомиссионера КАК ТаблицаДокумента
	//|	
	//|	ЛЕВОЕ СОЕДИНЕНИЕ
	//|		СчетаФактуры КАК СчетаФактуры
	//|	ПО
	//|		ТаблицаДокумента.Ссылка = СчетаФактуры.ДокументОснование
	//|
	//|ГДЕ
	//|	(ТаблицаДокумента.Ссылка В (&МассивДокументов)
	//|	ИЛИ СчетаФактуры.ДокументОснование ЕСТЬ НЕ NULL)
	//|	И НЕ &ОплатаОтКлиента
	//|	
	//|ОБЪЕДИНИТЬ ВСЕ
	//|	
	//|ВЫБРАТЬ
	//|	ТаблицаДокумента.СтавкаНДС     КАК СтавкаНДС,
	//|	ТаблицаДокумента.СуммаСНДС     КАК СуммаСНДС,
	//|	ТаблицаДокумента.СуммаНДС      КАК СуммаНДС,
	//|	ТаблицаДокумента.Ссылка.Валюта КАК Валюта,
	//|	ТаблицаДокумента.Ссылка.Дата   КАК Дата,
	//|	ТаблицаДокумента.Ссылка        КАК Заказ
	//|
	//|ИЗ
	//|	Документ.ОтчетКомиссионераОСписании.Товары КАК ТаблицаДокумента
	//|
	//|ГДЕ
	//|	ТаблицаДокумента.Ссылка В (&МассивДокументов)
	//|	
	//|ОБЪЕДИНИТЬ ВСЕ
	//|	
	//|ВЫБРАТЬ
	//|	ТаблицаДокумента.СтавкаНДС     КАК СтавкаНДС,
	//|	ТаблицаДокумента.СуммаСНДС     КАК СуммаСНДС,
	//|	ТаблицаДокумента.СуммаНДС      КАК СуммаНДС,
	//|	ТаблицаДокумента.Ссылка.Валюта КАК Валюта,
	//|	ТаблицаДокумента.Ссылка.Дата   КАК Дата,
	//|	ТаблицаДокумента.Ссылка        КАК Заказ
	//|
	//|ИЗ
	//|	Документ.ОтчетПоКомиссииМеждуОрганизациями.Товары КАК ТаблицаДокумента
	//|	
	//|	ЛЕВОЕ СОЕДИНЕНИЕ
	//|		СчетаФактуры КАК СчетаФактуры
	//|	ПО
	//|		ТаблицаДокумента.Ссылка = СчетаФактуры.ДокументОснование
	//|
	//|ГДЕ
	//|	(ТаблицаДокумента.Ссылка В (&МассивДокументов)
	//|	ИЛИ СчетаФактуры.ДокументОснование ЕСТЬ НЕ NULL)
	//|	И &ОплатаОтКлиента
	//|	
	//|ОБЪЕДИНИТЬ ВСЕ
	//|	
	//|ВЫБРАТЬ
	//|	ТаблицаДокумента.СтавкаНДСВознаграждения КАК СтавкаНДС,
	//|	ТаблицаДокумента.СуммаВознаграждения     КАК СуммаСНДС,
	//|	ТаблицаДокумента.СуммаНДСВознаграждения  КАК СуммаНДС,
	//|	ТаблицаДокумента.Ссылка.Валюта           КАК Валюта,
	//|	ТаблицаДокумента.Ссылка.Дата             КАК Дата,
	//|	ТаблицаДокумента.Ссылка        КАК Заказ
	//|
	//|ИЗ
	//|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ТаблицаДокумента
	//|	
	//|	ЛЕВОЕ СОЕДИНЕНИЕ
	//|		СчетаФактуры КАК СчетаФактуры
	//|	ПО
	//|		ТаблицаДокумента.Ссылка = СчетаФактуры.ДокументОснование
	//|
	//|ГДЕ
	//|	(ТаблицаДокумента.Ссылка В (&МассивДокументов)
	//|	ИЛИ СчетаФактуры.ДокументОснование ЕСТЬ НЕ NULL)
	//|	И НЕ &ОплатаОтКлиента
	//|	
	//|ОБЪЕДИНИТЬ ВСЕ
	//|	
	//|ВЫБРАТЬ
	//|	ТаблицаДокумента.СтавкаНДС     КАК СтавкаНДС,
	//|	ТаблицаДокумента.СуммаСНДС     КАК СуммаСНДС,
	//|	ТаблицаДокумента.СуммаНДС      КАК СуммаНДС,
	//|	ТаблицаДокумента.Ссылка.Валюта КАК Валюта,
	//|	ТаблицаДокумента.Ссылка.Дата   КАК Дата,
	//|	ТаблицаДокумента.Ссылка        КАК Заказ
	//|
	//|ИЗ
	//|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТаблицаДокумента
	//|	
	//|	ЛЕВОЕ СОЕДИНЕНИЕ
	//|		СчетаФактуры КАК СчетаФактуры
	//|	ПО
	//|		ТаблицаДокумента.Ссылка = СчетаФактуры.ДокументОснование
	//|
	//|ГДЕ
	//|	ТаблицаДокумента.Ссылка В (&МассивДокументов)
	//|	ИЛИ СчетаФактуры.ДокументОснование ЕСТЬ НЕ NULL
	//|	
	//|ОБЪЕДИНИТЬ ВСЕ
	//|	
	//|ВЫБРАТЬ
	//|	ТаблицаДокумента.СтавкаНДС     КАК СтавкаНДС,
	//|	ТаблицаДокумента.СуммаСНДС     КАК СуммаСНДС,
	//|	ТаблицаДокумента.СуммаНДС      КАК СуммаНДС,
	//|	ТаблицаДокумента.Ссылка.Валюта КАК Валюта,
	//|	ТаблицаДокумента.Ссылка.Дата   КАК Дата,
	//|	ТаблицаДокумента.Ссылка        КАК Заказ
	//|
	//|ИЗ
	//|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаДокумента
	//|
	//|ГДЕ
	//|	ТаблицаДокумента.Ссылка В (&МассивДокументов)
	//|	
	//|ОБЪЕДИНИТЬ ВСЕ
	//|	
	//|ВЫБРАТЬ
	//|	ТаблицаДокумента.СтавкаНДС     КАК СтавкаНДС,
	//|	ТаблицаДокумента.СуммаСНДС     КАК СуммаСНДС,
	//|	ТаблицаДокумента.СуммаНДС      КАК СуммаНДС,
	//|	ТаблицаДокумента.Ссылка.Валюта КАК Валюта,
	//|	ТаблицаДокумента.Ссылка.Дата   КАК Дата,
	//|	ТаблицаДокумента.Ссылка        КАК Заказ
	//|
	//|ИЗ
	//|	Документ.ПоступлениеУслугПрочихАктивов.Расходы КАК ТаблицаДокумента
	//|
	//|ГДЕ
	//|	ТаблицаДокумента.Ссылка В (&МассивДокументов)
	//|	
	//|ОБЪЕДИНИТЬ ВСЕ
	//|	
	//|ВЫБРАТЬ
	//|	ТаблицаДокумента.СтавкаНДС     КАК СтавкаНДС,
	//|	ТаблицаДокумента.СуммаСНДС     КАК СуммаСНДС,
	//|	ТаблицаДокумента.СуммаНДС      КАК СуммаНДС,
	//|	ТаблицаДокумента.Ссылка.Валюта КАК Валюта,
	//|	ТаблицаДокумента.Ссылка.Дата   КАК Дата,
	//|	ТаблицаДокумента.Ссылка        КАК Заказ
	//|
	//|ИЗ
	//|	Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаДокумента
	//|	
	//|	ЛЕВОЕ СОЕДИНЕНИЕ
	//|		СчетаФактуры КАК СчетаФактуры
	//|	ПО
	//|		ТаблицаДокумента.Ссылка = СчетаФактуры.ДокументОснование
	//|
	//|ГДЕ
	//|	ТаблицаДокумента.Ссылка В (&МассивДокументов)
	//|	ИЛИ СчетаФактуры.ДокументОснование ЕСТЬ НЕ NULL
	//|	
	//|ОБЪЕДИНИТЬ ВСЕ
	//|	
	//|ВЫБРАТЬ
	//|	ТаблицаДокумента.СтавкаНДС     КАК СтавкаНДС,
	//|	ТаблицаДокумента.СуммаСНДС     КАК СуммаСНДС,
	//|	ТаблицаДокумента.СуммаНДС      КАК СуммаНДС,
	//|	ТаблицаДокумента.Ссылка.Валюта КАК Валюта,
	//|	ТаблицаДокумента.Ссылка.Дата   КАК Дата,
	//|	ТаблицаДокумента.Ссылка        КАК Заказ
	//|
	//|ИЗ
	//|	Документ.РеализацияУслугПрочихАктивов.Доходы КАК ТаблицаДокумента
	//|	
	//|	ЛЕВОЕ СОЕДИНЕНИЕ
	//|		СчетаФактуры КАК СчетаФактуры
	//|	ПО
	//|		ТаблицаДокумента.Ссылка = СчетаФактуры.ДокументОснование
	//|
	//|ГДЕ
	//|	ТаблицаДокумента.Ссылка В (&МассивДокументов)
	//|	ИЛИ СчетаФактуры.ДокументОснование ЕСТЬ НЕ NULL
	//|
	//|ОБЪЕДИНИТЬ ВСЕ
	//|	
	//|ВЫБРАТЬ
	//|	ТаблицаДокумента.СтавкаНДС     КАК СтавкаНДС,
	//|	ТаблицаДокумента.СуммаСНДС     КАК СуммаСНДС,
	//|	ТаблицаДокумента.СуммаНДС      КАК СуммаНДС,
	//|	ТаблицаДокумента.Ссылка.Валюта КАК Валюта,
	//|	ТаблицаДокумента.Ссылка.Дата   КАК Дата,
	//|	ТаблицаДокумента.Ссылка        КАК Заказ
	//|
	//|ИЗ
	//|	Документ.ВозвратТоваровПоставщику.Товары КАК ТаблицаДокумента
	//|	
	//|	ЛЕВОЕ СОЕДИНЕНИЕ
	//|		СчетаФактуры КАК СчетаФактуры
	//|	ПО
	//|		ТаблицаДокумента.Ссылка = СчетаФактуры.ДокументОснование
	//|
	//|ГДЕ
	//|	ТаблицаДокумента.Ссылка В (&МассивДокументов)
	//|	ИЛИ СчетаФактуры.ДокументОснование ЕСТЬ НЕ NULL
	//|
	//|ОБЪЕДИНИТЬ ВСЕ
	//|	
	//|ВЫБРАТЬ
	//|	ТаблицаДокумента.СтавкаНДС     КАК СтавкаНДС,
	//|	ТаблицаДокумента.СуммаСНДС     КАК СуммаСНДС,
	//|	ТаблицаДокумента.СуммаНДС      КАК СуммаНДС,
	//|	ТаблицаДокумента.Ссылка.Валюта КАК Валюта,
	//|	ТаблицаДокумента.Ссылка.Дата   КАК Дата,
	//|	ТаблицаДокумента.Ссылка        КАК Заказ
	//|
	//|ИЗ
	//|	Документ.ВозвратТоваровОтКлиента.Товары КАК ТаблицаДокумента
	//|	
	//|	ЛЕВОЕ СОЕДИНЕНИЕ
	//|		СчетаФактуры КАК СчетаФактуры
	//|	ПО
	//|		ТаблицаДокумента.Ссылка = СчетаФактуры.ДокументОснование
	//|
	//|ГДЕ
	//|	ТаблицаДокумента.Ссылка В (&МассивДокументов)
	//|	ИЛИ СчетаФактуры.ДокументОснование ЕСТЬ НЕ NULL
	//|;
	//|
	//|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСуммНДС.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаСуммНДС.Валюта КАК Валюта,
	|	НАЧАЛОПЕРИОДА(ТаблицаСуммНДС.Дата, ДЕНЬ) КАК Дата,
	|	СУММА(ТаблицаСуммНДС.СуммаСНДС) КАК СуммаСНДС,
	|	СУММА(ТаблицаСуммНДС.СуммаНДС) КАК СуммаНДС,
	|	ТаблицаСуммНДС.Заказ КАК Заказ
	|
	|ИЗ
	|	ТаблицаСуммНДС КАК ТаблицаСуммНДС
	|ГДЕ
	|	ТаблицаСуммНДС.СуммаСНДС > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСуммНДС.Заказ,
	|	ТаблицаСуммНДС.СтавкаНДС,
	|	ТаблицаСуммНДС.Валюта,
	|	НАЧАЛОПЕРИОДА(ТаблицаСуммНДС.Дата, ДЕНЬ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Заказ,
	|	СтавкаНДС
	|
	|ИТОГИ ПО
	|	Валюта
	|";
КонецФункции 

&НаСервере
Процедура ПодготовитьДанныеРасшифровкиПлатежаНДС(Знач Источник, Знач ВходящиеДанные = Неопределено)
	
КонецПроцедуры

&НаКлиенте
Процедура ДокСсылкаСтрокаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	пр_Клиент.Объект1СОкончаниеВводаТекста(Док_Ссылка, Текст, СтандартнаяОбработка);
КонецПроцедуры



#КонецОбласти

#Область  ОтчетКомиссионераПКО

&НаСервере
Процедура ОтчетКомиссионераПКО()
	
	Если НЕ Отказ Тогда
		
		Если ТипЗнч(ВходящиеДанные) <> Тип("Структура") Тогда
			ВходящиеДанные = Новый Структура;
		КонецЕсли;
		
		
		// Определяем наличие сторно и не сторно операций
		
		ЕстьСторно   = Ложь;
		ЕстьНеСторно = Ложь;
		
		Для Каждого Строка Из Источник.Товары Цикл
			Если Строка.Количество < 0 Тогда
				ЕстьСторно   = Истина;
			Иначе
				ЕстьНеСторно = Истина;
			КонецЕсли;
		КонецЦикла;
		
		ВходящиеДанные.Вставить("ЕстьСторно",   ЕстьСторно);
		ВходящиеДанные.Вставить("ЕстьНеСторно", ЕстьНеСторно);
		
		// Вычисление табличных частей документа
		
		Запрос = Новый Запрос("ВЫБРАТЬ
			|	Товары.НомерСтроки КАК НомерСтрокиДокумента,
			|	Товары.Ссылка,
			|	Товары.Ссылка.Организация КАК Организация,
			|	Товары.Номенклатура,
			|	Товары.Характеристика,
			|	Товары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	Товары.Количество,
			|	Товары.СтавкаНДС,
			|	Товары.СуммаСНДС / Товары.Количество КАК ЦенаПередачи,
			|	Товары.СуммаСНДС КАК СуммаПередачи,
			|	Товары.СуммаПродажи / Товары.Количество КАК Цена,
			|	Товары.СуммаПродажи КАК Сумма,
			|	Товары.СуммаПродажиНДС КАК СуммаНДС,
			|	Товары.СуммаВознаграждения КАК СуммаВознаграждения,
			|	ВЫБОР
			|		КОГДА Товары.Покупатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
			|			ТОГДА Товары.Ссылка.Контрагент
			|		ИНАЧЕ Товары.Покупатель
			|	КОНЕЦ КАК Покупатель,
			|	ВЫБОР
			|		КОГДА Товары.ДатаСчетаФактурыКомиссионера = ДАТАВРЕМЯ(1, 1, 1)
			|			ТОГДА НАЧАЛОПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ)
			|		ИНАЧЕ НАЧАЛОПЕРИОДА(Товары.ДатаСчетаФактурыКомиссионера, ДЕНЬ)
			|	КОНЕЦ КАК ДатаСФ,
			|	Товары.НомерСчетаФактурыКомиссионера КАК НомерСФ,
			|	ВидНоменклатурыСпр.ВариантОказанияУслуг,
			|	НоменклатураСпр.ТипНоменклатуры,
			|	ВЫБОР
			|		КОГДА Товары.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
			|			ТОГДА ВЫБОР
			|					КОГДА ХарактеристикаСпр.НаименованиеПолное = """"
			|						ТОГДА ХарактеристикаСпр.Наименование
			|					ИНАЧЕ ХарактеристикаСпр.НаименованиеПолное
			|				КОНЕЦ
			|		ИНАЧЕ """"
			|	КОНЕЦ КАК ХарактеристикаНаименование,
			|	ВЫБОР
			|		КОГДА НоменклатураСпр.НаименованиеПолное = """"
			|			ТОГДА НоменклатураСпр.Наименование
			|		ИНАЧЕ НоменклатураСпр.НаименованиеПолное
			|	КОНЕЦ КАК НоменклатураНаименование
			|ПОМЕСТИТЬ Товары
			|ИЗ
			|	Документ.ОтчетКомиссионера.Товары КАК Товары
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСпр
			|		ПО (НоменклатураСпр.Ссылка = Товары.Номенклатура)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидНоменклатурыСпр
			|		ПО (ВидНоменклатурыСпр.Ссылка = НоменклатураСпр.ВидНоменклатуры)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикаСпр
			|		ПО (ХарактеристикаСпр.Ссылка = Товары.Характеристика)
			|ГДЕ
			|	Товары.Ссылка = &Ссылка
			|	И Товары.Количество > 0
			|
			|СГРУППИРОВАТЬ ПО
			|	Товары.НомерСтроки,
			|	Товары.Ссылка,
			|	Товары.Ссылка.Организация,
			|	Товары.Номенклатура,
			|	Товары.Характеристика,
			|	Товары.Номенклатура.ЕдиницаИзмерения,
			|	Товары.Количество,
			|	Товары.СтавкаНДС,
			|	Товары.СуммаСНДС / Товары.Количество,
			|	Товары.СуммаСНДС,
			|	Товары.СуммаПродажи / Товары.Количество,
			|	Товары.СуммаПродажи,
			|	Товары.СуммаПродажиНДС,
			|	Товары.СуммаВознаграждения,
			|	ВЫБОР
			|		КОГДА Товары.Количество < 0
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ,
			|	Товары.НомерСчетаФактурыКомиссионера,
			|	ВидНоменклатурыСпр.ВариантОказанияУслуг,
			|	НоменклатураСпр.ТипНоменклатуры,
			|	ВЫБОР
			|		КОГДА Товары.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
			|			ТОГДА ВЫБОР
			|					КОГДА ХарактеристикаСпр.НаименованиеПолное = """"
			|						ТОГДА ХарактеристикаСпр.Наименование
			|					ИНАЧЕ ХарактеристикаСпр.НаименованиеПолное
			|				КОНЕЦ
			|		ИНАЧЕ """"
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА НоменклатураСпр.НаименованиеПолное = """"
			|			ТОГДА НоменклатураСпр.Наименование
			|		ИНАЧЕ НоменклатураСпр.НаименованиеПолное
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА Товары.ДатаСчетаФактурыКомиссионера = ДАТАВРЕМЯ(1, 1, 1)
			|			ТОГДА НАЧАЛОПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ)
			|		ИНАЧЕ НАЧАЛОПЕРИОДА(Товары.ДатаСчетаФактурыКомиссионера, ДЕНЬ)
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА Товары.Покупатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
			|			ТОГДА Товары.Ссылка.Контрагент
			|		ИНАЧЕ Товары.Покупатель
			|	КОНЕЦ
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Товары.Ссылка,
			|	Организация,
			|	Покупатель,
			|	ДатаСФ,
			|	НомерСФ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаРаспределения.НомерСтрокиДокумента,
			|	ТаблицаРаспределения.Номенклатура,
			|	ТаблицаРаспределения.Характеристика,
			|	ТаблицаРаспределения.ЕдиницаИзмерения,
			|	ТаблицаРаспределения.СтавкаНДС,
			|	ТаблицаРаспределения.СуммаВознаграждения,
			|	ТаблицаРаспределения.Покупатель,
			|	ТаблицаРаспределения.ДатаСФ,
			|	ТаблицаРаспределения.НомерСФ,
			|	ТаблицаРаспределения.ТипНоменклатуры,
			|	0 КАК СуммаНДСВознаграждения
			|ИЗ
			|	Товары КАК ТаблицаРаспределения
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Товары.НомерСтрокиДокумента,
			|	Товары.Номенклатура,
			|	Товары.Характеристика,
			|	Товары.ЕдиницаИзмерения,
			|	Товары.Количество,
			|	Товары.СтавкаНДС,
			|	Товары.ЦенаПередачи,
			|	Товары.СуммаПередачи,
			|	Товары.Цена,
			|	Товары.Сумма,
			|	Товары.СуммаНДС,
			|	Товары.СуммаВознаграждения,
			|	Товары.Покупатель,
			|	Товары.ДатаСФ,
			|	Товары.НомерСФ,
			|	ЛОЖЬ КАК ВидыЗапасовЗаполнены,
			|	1 КАК Коэффициент,
			|	1 КАК КлючСтроки,
			|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
			|	ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка) КАК СтранаПроисхождения,
			|	0 КАК СуммаНДСВознаграждения,
			|	ВЫРАЗИТЬ("""" КАК СТРОКА(120)) КАК СЧЕТУЧЕТА
			|ИЗ
			|	Товары КАК Товары
			|ГДЕ
			|	Товары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Услуги.НомерСтрокиДокумента,
			|	Услуги.Номенклатура,
			|	Услуги.Характеристика,
			|	ВЫБОР
			|		КОГДА Услуги.ХарактеристикаНаименование = """"
			|			ТОГДА Услуги.НоменклатураНаименование
			|		ИНАЧЕ Услуги.НоменклатураНаименование + "" ("" + Услуги.ХарактеристикаНаименование + "")""
			|	КОНЕЦ КАК Содержание,
			|	Услуги.Количество,
			|	Услуги.СтавкаНДС,
			|	Услуги.Цена,
			|	Услуги.Сумма,
			|	Услуги.СуммаНДС,
			|	Услуги.СуммаВознаграждения,
			|	Услуги.Покупатель,
			|	Услуги.ДатаСФ,
			|	Услуги.НомерСФ,
			|	1 КАК КлючСтроки,
			|	0 КАК СуммаНДСВознаграждения
			|ИЗ
			|	Товары КАК Услуги
			|ГДЕ
			|	Услуги.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
			|	И (Услуги.ВариантОказанияУслуг = ЗНАЧЕНИЕ(Перечисление.ВариантыОказанияУслуг.Партнером)
			|			ИЛИ Услуги.ВариантОказанияУслуг = ЗНАЧЕНИЕ(Перечисление.ВариантыОказанияУслуг.ОрганизациейПоАгентскойСхеме))
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВидыЗапасов.Количество КАК Количество,
			|	ВидыЗапасов.НомерГТД,
			|	ВидыЗапасов.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
			|	ВЫБОР
			|		КОГДА ВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
			|			ТОГДА ""ТоварыПереданныеНаКомиссию""
			|		ИНАЧЕ НЕОПРЕДЕЛЕНО
			|	КОНЕЦ КАК СчетУчета,
			|	ВЫБОР
			|		КОГДА ВидыЗапасов.Количество < 0
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК Сторно,
			|	ВидыЗапасов.ДатаСчетаФактурыКомиссионера КАК ДатаСФ,
			|	ВидыЗапасов.Покупатель,
			|	ВидыЗапасов.НомерСчетаФактурыКомиссионера КАК НомерСФ,
			|	Аналитика.Номенклатура,
			|	Аналитика.Характеристика
			|ИЗ
			|	Документ.ОтчетКомиссионера.ВидыЗапасов КАК ВидыЗапасов
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
			|		ПО ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
			|ГДЕ
			|	ВидыЗапасов.Ссылка = &Ссылка
			|	И ВидыЗапасов.Количество > 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	1 КАК КлючСтроки,
			|	Товары.Покупатель,
			|	ВЫБОР
			|		КОГДА СчетФактураВыданный.Дата ЕСТЬ NULL 
			|			ТОГДА Товары.ДатаСФ
			|		ИНАЧЕ НАЧАЛОПЕРИОДА(СчетФактураВыданный.Дата, ДЕНЬ)
			|	КОНЕЦ КАК ДатаСФ,
			|	ВЫБОР
			|		КОГДА Товары.НомерСФ = """"
			|			ТОГДА ЕСТЬNULL(СчетФактураВыданный.НомерСчетаФактурыКомиссионера, """")
			|		ИНАЧЕ Товары.НомерСФ
			|	КОНЕЦ КАК НомерСФ,
			|	МАКСИМУМ(ВЫБОР
			|			КОГДА СчетФактураВыданный.Ссылка ЕСТЬ NULL 
			|				ТОГДА ЛОЖЬ
			|			ИНАЧЕ ИСТИНА
			|		КОНЕЦ) КАК ВыставленСФ,
			|	МАКСИМУМ(ЕСТЬNULL(СчетФактураВыданный.Ссылка, ЗНАЧЕНИЕ(Документ.СчетФактураВыданный.ПустаяСсылка))) КАК СчетФактура,
			|	МИНИМУМ(Товары.НомерСтрокиДокумента) КАК ЗначениеУпорядочивания
			|ИЗ
			|	Товары КАК Товары
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
			|		ПО Товары.Ссылка = СчетФактураВыданный.ДокументОснование
			|			И Товары.Организация = СчетФактураВыданный.Организация
			|			И (Товары.ДатаСФ = НАЧАЛОПЕРИОДА(СчетФактураВыданный.Дата, ДЕНЬ)
			|				ИЛИ Товары.ДатаСФ = ДАТАВРЕМЯ(1, 1, 1))
			|			И (Товары.Покупатель = СчетФактураВыданный.Покупатель
			|				ИЛИ СчетФактураВыданный.Покупатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
			|			И (Товары.НомерСФ = СчетФактураВыданный.НомерСчетаФактурыКомиссионера
			|				ИЛИ СчетФактураВыданный.НомерСчетаФактурыКомиссионера = """")
			|			И (НЕ СчетФактураВыданный.ПометкаУдаления)
			|
			|СГРУППИРОВАТЬ ПО
			|	Товары.Покупатель,
			|	ВЫБОР
			|		КОГДА СчетФактураВыданный.Дата ЕСТЬ NULL 
			|			ТОГДА Товары.ДатаСФ
			|		ИНАЧЕ НАЧАЛОПЕРИОДА(СчетФактураВыданный.Дата, ДЕНЬ)
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА Товары.НомерСФ = """"
			|			ТОГДА ЕСТЬNULL(СчетФактураВыданный.НомерСчетаФактурыКомиссионера, """")
			|		ИНАЧЕ Товары.НомерСФ
			|	КОНЕЦ");
		
		Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
		РезультатыЗапроса = Запрос.ВыполнитьПакет();
		
		// Выгружаем таблицы из запроса
		
		ТабРаспределния = РезультатыЗапроса[1].Выгрузить();
		ТабТовары       = РезультатыЗапроса[2].Выгрузить();
		ТабУслуги       = РезультатыЗапроса[3].Выгрузить();
		ВидыЗапасов     = РезультатыЗапроса[4].Выбрать();
		ТабПокупатели   = РезультатыЗапроса[5].Выгрузить();
		
		РеквизитыПоиска = "Номенклатура,Характеристика,ДатаСФ,Покупатель,НомерСФ";
		
		// Распределение НДС вознаграждения
		
		БазаРаспределенияПоСуммеВознаграждения = ТабРаспределния.ВыгрузитьКолонку("СуммаВознаграждения");
		РаспределениеНДСВознаграждения = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Источник.СуммаНДСВознаграждения, 
		БазаРаспределенияПоСуммеВознаграждения);
		
		Если ЗначениеЗаполнено(РаспределениеНДСВознаграждения) Тогда
			ТабРаспределния.ЗагрузитьКолонку(РаспределениеНДСВознаграждения, "СуммаНДСВознаграждения");
		КонецЕсли;
		
		СтруктураПоиска = Новый Структура(РеквизитыПоиска + ",СтавкаНДС");
		ЗаполняемыеРеквизиты = "СуммаНДСВознаграждения";
		
		Для Каждого СтрокаТаблицыРаспределения Из ТабРаспределния Цикл
			
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТаблицыРаспределения);
			
			Если СтрокаТаблицыРаспределения.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар Тогда
				НайденныеСтроки = ТабТовары.НайтиСтроки(СтруктураПоиска);
			ИначеЕсли СтрокаТаблицыРаспределения.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга Тогда
				НайденныеСтроки = ТабУслуги.НайтиСтроки(СтруктураПоиска);
			КонецЕсли;
			
			Для Каждого СтрокаДокумента Из НайденныеСтроки Цикл
				ЗаполнитьЗначенияСвойств(СтрокаДокумента, СтрокаТаблицыРаспределения, ЗаполняемыеРеквизиты);
			КонецЦикла;
			
		КонецЦикла;
		
		// Распределение товаров по видам запасов
		
		СтруктураПоиска = Новый Структура(РеквизитыПоиска + ",ВидыЗапасовЗаполнены");
		ЗаполняемыеРеквизиты = "НомерГТД,СтранаПроисхождения,СчетУчета";
		
		ТабТовары.Индексы.Добавить(РеквизитыПоиска + ",ВидыЗапасовЗаполнены");
		
		Пока ВидыЗапасов.Следующий() Цикл
			
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, ВидыЗапасов, РеквизитыПоиска);
			СтруктураПоиска.ВидыЗапасовЗаполнены = Ложь;
			
			НайденныеСтроки = ТабТовары.НайтиСтроки(СтруктураПоиска);
			
			ОсталосьВидаЗапасов = ВидыЗапасов.Количество;
			Для Каждого СтрокаДокумента Из НайденныеСтроки Цикл
				
				Если ОсталосьВидаЗапасов = 0 Тогда
					Прервать;
				КонецЕсли;
				
				Если СтрокаДокумента.Количество <= ОсталосьВидаЗапасов Тогда
					
					ЗаполнитьЗначенияСвойств(СтрокаДокумента, ВидыЗапасов, ЗаполняемыеРеквизиты);
					СтрокаДокумента.ВидыЗапасовЗаполнены = Истина;
					
					ОсталосьВидаЗапасов = ОсталосьВидаЗапасов - СтрокаДокумента.Количество;
					
				Иначе
					
					// Выделение новой строки с заполненным видом запасов
					НоваяСтрока = ТабТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДокумента);
					
					ДоляВидаЗапасовВСтрокеДокумента = ОсталосьВидаЗапасов / СтрокаДокумента.Количество;
					
					НоваяСтрока.Количество             = ОсталосьВидаЗапасов;
					НоваяСтрока.СуммаПередачи          = Окр(СтрокаДокумента.СуммаПередачи * ДоляВидаЗапасовВСтрокеДокумента, 2);
					НоваяСтрока.Сумма                  = Окр(СтрокаДокумента.Сумма * ДоляВидаЗапасовВСтрокеДокумента, 2);
					НоваяСтрока.СуммаНДС               = Окр(СтрокаДокумента.СуммаНДС * ДоляВидаЗапасовВСтрокеДокумента, 2);
					НоваяСтрока.СуммаВознаграждения    = Окр(СтрокаДокумента.СуммаВознаграждения * ДоляВидаЗапасовВСтрокеДокумента, 2);
					НоваяСтрока.СуммаНДСВознаграждения = Окр(СтрокаДокумента.СуммаНДСВознаграждения * ДоляВидаЗапасовВСтрокеДокумента, 2);
					
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ВидыЗапасов, ЗаполняемыеРеквизиты);
					
					СтрокаДокумента.Количество             = СтрокаДокумента.Количество - НоваяСтрока.Количество;
					СтрокаДокумента.СуммаПередачи          = СтрокаДокумента.СуммаПередачи - НоваяСтрока.СуммаПередачи;
					СтрокаДокумента.Сумма                  = СтрокаДокумента.Сумма - НоваяСтрока.Сумма;
					СтрокаДокумента.СуммаНДС               = СтрокаДокумента.СуммаНДС - НоваяСтрока.СуммаНДС;
					СтрокаДокумента.СуммаВознаграждения    = СтрокаДокумента.СуммаВознаграждения - НоваяСтрока.СуммаВознаграждения;
					СтрокаДокумента.СуммаНДСВознаграждения = СтрокаДокумента.СуммаНДСВознаграждения - НоваяСтрока.СуммаНДСВознаграждения;
					
					ОсталосьВидаЗапасов = 0;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
		ТабТовары.Сортировать("НомерСтрокиДокумента Возр");
		ТабУслуги.Сортировать("НомерСтрокиДокумента Возр");
		
		// Установление связей между таблицей покупателей и таблицами товаров и услуг
		
		СтруктураПоиска = Новый Структура("Покупатель,ДатаСФ,НомерСФ");
		ЗаполняемыеРеквизиты = "КлючСтроки";
		
		Для Каждого Строка Из ТабПокупатели Цикл
			
			Строка.КлючСтроки = ТабПокупатели.Индекс(Строка) + 1;
			
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, Строка);
			
			НайденныеСтрокиТоваров = ТабТовары.НайтиСтроки(СтруктураПоиска);
			НайденныеСтрокиУслуг   = ТабУслуги.НайтиСтроки(СтруктураПоиска);
			
			Для Каждого СтрокаТоваров Из НайденныеСтрокиТоваров Цикл
				ЗаполнитьЗначенияСвойств(СтрокаТоваров, Строка, ЗаполняемыеРеквизиты);
			КонецЦикла;
			
			Для Каждого СтрокаУслуг Из НайденныеСтрокиУслуг Цикл
				ЗаполнитьЗначенияСвойств(СтрокаУслуг, Строка, ЗаполняемыеРеквизиты);
			КонецЦикла;
			
		КонецЦикла;
		
		ВходящиеДанные.Вставить("Товары", ТабТовары);
		ВходящиеДанные.Вставить("Услуги", ТабУслуги);
		ВходящиеДанные.Вставить("Покупатели", ТабПокупатели);
		
	КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура СчетФактураВыданный(Команда)
	СчетФактураВыданныйПослеЗагрузки();
КонецПроцедуры

&НаСервере
Процедура СчетФактураВыданныйПослеЗагрузки()
	
	//Удалить прочие СФ
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СчетФактураВыданныйДокументыОснования.Ссылка КАК Ссылка,
		|	СчетФактураВыданныйДокументыОснования.ДокументОснование КАК ДокументОснование
		|ПОМЕСТИТЬ ВТ_Данные
		|ИЗ
		|	Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
		|ГДЕ
		|	СчетФактураВыданныйДокументыОснования.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетФактураВыданныйСтарые.Ссылка КАК Ссылка
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйСтарые
		|		ПО ВТ_Данные.ДокументОснование = СчетФактураВыданныйСтарые.ДокументОснование
		|			И (СчетФактураВыданныйСтарые.Ссылка.Проведен = ИСТИНА)
		|ГДЕ
		|	СчетФактураВыданныйСтарые.Ссылка ЕСТЬ НЕ NULL ";
	
	//Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Ссылка", Док_Ссылка.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВДЗ = РезультатЗапроса.Выбрать();
	
	Пока ВДЗ.Следующий() Цикл
		ДокСФ = ВДЗ.Ссылка.ПолучитьОбъект();	
		ДокСФ.УстановитьПометкуУдаления(Истина);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ШК(Команда)
	ШКНаСервере();
КонецПроцедуры

&НаСервере
Процедура ШКНаСервере()
	
	Узел = ПланыОбмена.оду_ПланОбмена.НайтиПоКоду("Ядро");
	
	ЗаписьСообщения = ПланыОбмена.СоздатьЗаписьСообщения();
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку();
	ЗаписьСообщения.НачатьЗапись(ЗаписьXML, Узел);
	НомерСообщения = ЗаписьСообщения.НомерСообщения;
	
	ФильтрОбмена = Новый Массив;
	ФильтрОбмена.Добавить(РегистрыСведений.ШтрихкодыНоменклатуры.СоздатьНаборЗаписей());
	
	ВДЗ = ПланыОбмена.ВыбратьИзменения(Узел, НомерСообщения, ФильтрОбмена);
	
	Данные = Новый Массив;
	
	Пока ВДЗ.Следующий() Цикл
		Зареганые = ВДЗ.Получить();
		Данные.Добавить(Зареганые);
	КонецЦикла; 
	
	ЗаписьСообщения.ЗакончитьЗапись();
	ЗаписьXML.Закрыть();
	
	Если Данные.Количество() = 0 Тогда 
		Отказ = Истина;
	Иначе
		////Сбор Данных
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШтрихкодыНоменклатурыИзменения.Штрихкод КАК Штрихкод,
		|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Номенклатура, НЕОПРЕДЕЛЕНО) КАК Номенклатура,
		|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Характеристика, НЕОПРЕДЕЛЕНО) КАК Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Партия, 
		|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Упаковка, НЕОПРЕДЕЛЕНО) КАК ЕдиницаИзмерения, 
		|	ШтрихкодыНоменклатуры.Номенклатура ЕСТЬ NULL КАК ЭтоУдалениеОбъекта
		|ИЗ
		|	РегистрСведений.ШтрихкодыНоменклатуры.Изменения КАК ШтрихкодыНоменклатурыИзменения
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
		|		ПО ШтрихкодыНоменклатурыИзменения.Штрихкод = ШтрихкодыНоменклатуры.Штрихкод
		|ГДЕ
		|	Истина
		|	И ШтрихкодыНоменклатурыИзменения.Узел = &Узел
		|ИТОГИ ПО
		|	ЭтоУдалениеОбъекта
		|";
		
		Запрос.Параметры.Вставить("Узел", Узел);	
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаЭтоУдалениеОбъекта = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если ТипЗнч(ИсходящиеДанные) <> Тип("Структура") Тогда
			ИсходящиеДанные = Новый Структура("ЭтоУдалениеОбъекта");
		КонецЕсли;
		
		Пока ВыборкаЭтоУдалениеОбъекта.Следующий() Цикл
			
			ИсходящиеДанные.ЭтоУдалениеОбъекта = ВыборкаЭтоУдалениеОбъекта.ЭтоУдалениеОбъекта;
			ВДЗ = ВыборкаЭтоУдалениеОбъекта.Выбрать();
			
			Пока ВДЗ.Следующий() Цикл
				//ВыгрузитьПоПравилу(Источник, Приемник, ВходящиеДанные, ИсходящиеДанные, ИмяПКО, УзелСсылки, ТолькоПолучитьУзелСсылки, ПКО, ЭтоПравилоСГлобальнойВыгрузкойОбъектов, ВыборкаДляВыгрузкиДанных)
				ВыгрузитьПоПравилу(ВДЗ, , , ИсходящиеДанные, "ШтрихкодыНоменклатуры");	
			КонецЦикла;
			
		КонецЦикла;
		
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НомерСообщения;
		Сообщение.Сообщить(); 
		
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ВыгрузитьПоПравилу(Источник,
						   Приемник					= Неопределено,
						   ВходящиеДанные			= Неопределено,
						   ИсходящиеДанные			= Неопределено,
						   ИмяПКО					= "",
						   УзелСсылки				= Неопределено,
						   ТолькоПолучитьУзелСсылки	= Ложь,
						   ПКО						= Неопределено,
						   ЭтоПравилоСГлобальнойВыгрузкойОбъектов = Ложь,  ВыборкаДляВыгрузкиДанных = Неопределено)
   
   
	Если ТипЗнч(ВходящиеДанные) <> Тип("Структура") Тогда
		ВходящиеДанные = Новый Структура("ЭтоУдалениеОбъекта");
		ЗаполнитьЗначенияСвойств(ВходящиеДанные, ИсходящиеДанные); 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТЕстЗаписиШК(Команда)
	ТЕстЗаписиШКНаСервере();
КонецПроцедуры

&НаСервере
Процедура ТЕстЗаписиШКНаСервере()           
//	
//	"Штрихкод" Тип="Строка">
//	<Значение>04603454392009</Значение>
//</Свойство><Свойство Имя="Номенклатура" Тип="СправочникСсылка.Номенклатура"><Ссылка Нпп="2">
//	<Свойство Имя="{УникальныйИдентификатор}" Тип="Строка">
//		<Значение>a8a7bc6c-ab51-11e8-8221-00155d640d0b</Значение>
//	</Свойство>
//	<Свойство Имя="Код" Тип="Строка">
//		<Значение>УТ-00002200</Значение>
//	</Свойство>
//	<Свойство Имя="ЭтоГруппа" Тип="Булево">
//		<Значение>false</Значение>
//	</Свойство>
//</Ссылка>
	
//	Запись = РегистрыСведений.ШтрихкодыНоменклатуры.СоздатьМенеджерЗаписи();
	//ЗаполнитьЗначенияСвойств(Запись, Объект);
	//Запись.Штрихкод = "04603454392009";
	//Запись.Номенклатура = пр_Общий.СсылкаПоТипXML("CatalogRef.Номенклатура", "a8a7bc6c-ab51-11e8-8221-00155d640d0b");
	
	//Запись.Записать(); 
	
	
	Набор = РегистрыСведений.ШтрихкодыНоменклатуры.СоздатьНаборЗаписей();
	Набор.Отбор.Штрихкод.Установить("2000021438545");
	Набор.Прочитать();     
	Набор.Очистить();
	Набор.Записать();
	//Для каждого  Из  Цикл
	//
	//	
	//
	//КонецЦикла;
	//Если  Тогда
	//
	//	
	//
	//КонецЕсли;
	//
	//Запись.Штрихкод = "2000021438545";  
	//
	//Запись.Прочитать();  
	//Запись.Удалить(); 
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьРегистры(Команда)
	ВыгрузитьРегистрыНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьРегистрыНаСервере()
	
	Попытка
		
	пр_Модуль = пр_Общий.ИсполняемыйМодуль("оду_ОбщийПовтИсп", пр_НастройкиПовтИсп.ТекущийПользователь()); 
	Если пр_Модуль = Неопределено Тогда
		пр_Модуль = оду_ОбщийПовтИсп;
	КонецЕсли; 
	
	ПараметрыКонвертации = пр_Модуль.ПараметрыКонвертацииОбъекта();
		
	оду_УзелПланаОбмена = ПланыОбмена.оду_ПланОбмена.НайтиПоКоду("Ядро");
	
	ЗаписьСообщения = ПланыОбмена.СоздатьЗаписьСообщения();
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку();
	ЗаписьСообщения.НачатьЗапись(ЗаписьXML, оду_УзелПланаОбмена);
	НомерСообщения = ЗаписьСообщения.НомерСообщения;
	//НомерСообщения = 0;
	
	ФильтрОбмена = Новый Массив;
	ФильтрОбмена.Добавить(РегистрыСведений.ЦеныНоменклатуры.СоздатьНаборЗаписей());
	
	ВДЗ = ПланыОбмена.ВыбратьИзменения(оду_УзелПланаОбмена, НомерСообщения);//, ФильтрОбмена);
	
	Данные = Новый Массив;
	
	Пока ВДЗ.Следующий() Цикл
		Зареганые = ВДЗ.Получить();
		Данные.Добавить(Зареганые);
	КонецЦикла; 
	
	ЗаписьСообщения.ЗакончитьЗапись();
	ЗаписьXML.Закрыть();
	
	Если Данные.Количество() = 0 Тогда 
		Отказ = Истина;
	Иначе
		
		//ВыгрузкаРегистров();

		//Сообщение = Новый СообщениеПользователю;
		//Сообщение.Текст = НомерСообщения;
		//Сообщение.Сообщить(); 
		
	КонецЕсли;
	
	Исключение
		пр_Ошибка = ОписаниеОшибки();
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = пр_Ошибка;
		Сообщение.Сообщить(); 
		//ОтправитьСообщениеВТелеграммПетрушка("РезультатОтправкиУведомленияУниверсальное", ДокОбъект.Ссылка, пр_Ошибка, , , , , СтруктураДанныхУведомления);
	  //Возврат Неопределено;
	КонецПопытки;
	 
	
	
КонецПроцедуры


&НаСервере
Процедура ВыгрузкаРегистров()
	
    оду_УзелПланаОбмена = Параметры.оду_УзелПланаОбмена;
			
	Если ТипЗнч(ИсходящиеДанные) <> Тип("Структура") Тогда
		ИсходящиеДанные = Новый Структура("ЭтоУдалениеОбъекта");
	КонецЕсли;
	
	////Сбор Цены
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЦеныНоменклатуры.Период КАК Период,
		|	ЕСТЬNULL(ЦеныНоменклатуры.Номенклатура, НЕОПРЕДЕЛЕНО) КАК Номенклатура,
		|	ЕСТЬNULL(ЦеныНоменклатуры.Характеристика, НЕОПРЕДЕЛЕНО) КАК Характеристика,
		|	ЕСТЬNULL(ЦеныНоменклатуры.ВидЦены, НЕОПРЕДЕЛЕНО) КАК ВидЦены,
		|	ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) КАК Цена,
		|	ЕСТЬNULL(ЦеныНоменклатуры.Упаковка, НЕОПРЕДЕЛЕНО) КАК Упаковка,
		|	ЕСТЬNULL(ЦеныНоменклатуры.Валюта, НЕОПРЕДЕЛЕНО) КАК Валюта,
		|	ЦеныНоменклатуры.Номенклатура ЕСТЬ NULL КАК ЭтоУдалениеОбъекта,
		|	ЦеныНоменклатурыИзменения.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ ВТ_Данные
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.Изменения КАК ЦеныНоменклатурыИзменения
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
		|		ПО ЦеныНоменклатурыИзменения.Регистратор = ЦеныНоменклатуры.Регистратор
		|ГДЕ
		|	ИСТИНА
		|	И ЦеныНоменклатурыИзменения.Узел = &Узел
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УстановкаЦенНоменклатурыТовары.Ссылка.Дата КАК Период,
		|	УстановкаЦенНоменклатурыТовары.Номенклатура КАК Номенклатура,
		|	УстановкаЦенНоменклатурыТовары.Характеристика КАК Характеристика,
		|	УстановкаЦенНоменклатурыТовары.Упаковка КАК Упаковка,
		|	УстановкаЦенНоменклатурыТовары.ВидЦены КАК ВидЦены,
		|	УстановкаЦенНоменклатурыТовары.Цена КАК Цена,
		|	ИСТИНА КАК ЭтоУдалениеОбъекта
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УстановкаЦенНоменклатуры.Товары КАК УстановкаЦенНоменклатурыТовары
		|		ПО ВТ_Данные.Регистратор = УстановкаЦенНоменклатурыТовары.Ссылка
		|ГДЕ
		|	ВТ_Данные.ЭтоУдалениеОбъекта = ИСТИНА
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Данные.Период,
		|	ВТ_Данные.Номенклатура,
		|	ВТ_Данные.Характеристика,
		|	ВТ_Данные.Упаковка,
		|	ВТ_Данные.ВидЦены,
		|	ВТ_Данные.Цена,
		|	ВТ_Данные.ЭтоУдалениеОбъекта
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные
		|ГДЕ
		|	ВТ_Данные.ЭтоУдалениеОбъекта = ЛОЖЬ
		|ИТОГИ ПО
		|	ЭтоУдалениеОбъекта
		|";
	
	Запрос.Параметры.Вставить("Узел", оду_УзелПланаОбмена);	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаЭтоУдалениеОбъекта = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаЭтоУдалениеОбъекта.Следующий() Цикл
		
		ИсходящиеДанные.ЭтоУдалениеОбъекта = ВыборкаЭтоУдалениеОбъекта.ЭтоУдалениеОбъекта;
		ВДЗ = ВыборкаЭтоУдалениеОбъекта.Выбрать();
		
		Пока ВДЗ.Следующий() Цикл
			//ВыгрузитьПоПравилу(Источник, Приемник, ВходящиеДанные, ИсходящиеДанные, ИмяПКО, УзелСсылки, ТолькоПолучитьУзелСсылки, ПКО, ЭтоПравилоСГлобальнойВыгрузкойОбъектов, ВыборкаДляВыгрузкиДанных)
			ВыгрузитьПоПравилу(ВДЗ, , , ИсходящиеДанные, "ЦеныНоменклатуры");	
		КонецЦикла;
		
	КонецЦикла;
		
	////Сбор ШтрихКоды
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШтрихкодыНоменклатурыИзменения.Штрихкод КАК Штрихкод,
		|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Номенклатура, НЕОПРЕДЕЛЕНО) КАК Номенклатура,
		|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Характеристика, НЕОПРЕДЕЛЕНО) КАК Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Партия, 
		|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Упаковка, НЕОПРЕДЕЛЕНО) КАК ЕдиницаИзмерения, 
		|	ШтрихкодыНоменклатуры.Номенклатура ЕСТЬ NULL КАК ЭтоУдалениеОбъекта
		|ИЗ
		|	РегистрСведений.ШтрихкодыНоменклатуры.Изменения КАК ШтрихкодыНоменклатурыИзменения
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
		|		ПО ШтрихкодыНоменклатурыИзменения.Штрихкод = ШтрихкодыНоменклатуры.Штрихкод
		|ГДЕ
		|	Истина
		|	И ШтрихкодыНоменклатурыИзменения.Узел = &Узел
		|ИТОГИ ПО
		|	ЭтоУдалениеОбъекта
		|";
	
	Запрос.Параметры.Вставить("Узел", оду_УзелПланаОбмена);	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаЭтоУдалениеОбъекта = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаЭтоУдалениеОбъекта.Следующий() Цикл
		
		ИсходящиеДанные.ЭтоУдалениеОбъекта = ВыборкаЭтоУдалениеОбъекта.ЭтоУдалениеОбъекта;
		ВДЗ = ВыборкаЭтоУдалениеОбъекта.Выбрать();
		
		Пока ВДЗ.Следующий() Цикл
			//ВыгрузитьПоПравилу(Источник, Приемник, ВходящиеДанные, ИсходящиеДанные, ИмяПКО, УзелСсылки, ТолькоПолучитьУзелСсылки, ПКО, ЭтоПравилоСГлобальнойВыгрузкойОбъектов, ВыборкаДляВыгрузкиДанных)
			ВыгрузитьПоПравилу(ВДЗ, , , ИсходящиеДанные, "ШтрихкодыНоменклатуры");	
		КонецЦикла;
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура Алгоритмы(Команда)
	АлгоритмыНаСервере();
КонецПроцедуры

&НаСервере
Процедура АлгоритмыНаСервере()
	
	оду_ДополнительныеСвойстваОбъекта = Новый Структура("оду_ЭтоНовыйОбъект", Истина);
	СтруктураПроверкиЭтоНовыйОбъект = Новый Структура("оду_ЭтоНовыйОбъект", Ложь);
	
	Если ТипЗнч(оду_ДополнительныеСвойстваОбъекта) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(СтруктураПроверкиЭтоНовыйОбъект, оду_ДополнительныеСвойстваОбъекта);
	КонецЕсли; 
	
	Если СтруктураПроверкиЭтоНовыйОбъект.оду_ЭтоНовыйОбъект = Истина Тогда
		ИмяПКО = "Номенклатура";
	Иначе
		ИмяПКО = "л_Номенклатура";
	КонецЕсли;
	
	
КонецПроцедуры
 
 

#КонецОбласти
 

