
Процедура ВыгрузкаДанныхИзПланаОбмена()  Экспорт
	
	Попытка
		
		
	//оду_УзелПланаОбмена = ПланыОбмена.оду_ПланОбмена.НайтиПоКоду("Ядро");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	оду_БазыУчастникиОбмена.Ссылка КАК УО,
		|	оду_БазыУчастникиОбмена.ПланОбмена КАК оду_УзелПланаОбмена,
		|	оду_БазыУчастникиОбмена.ИДБазы КАК ИДБазыПриемник
		|ИЗ
		|	Справочник.оду_БазыУчастникиОбмена КАК оду_БазыУчастникиОбмена
		|ГДЕ
		|	оду_БазыУчастникиОбмена.ПометкаУдаления = ЛОЖЬ
		|	И оду_БазыУчастникиОбмена.Используется = ИСТИНА
		|	И оду_БазыУчастникиОбмена.ИспользоватьРегламентВыгрузкиДанных = ИСТИНА
		|	И оду_БазыУчастникиОбмена.ПланОбмена <> ЗНАЧЕНИЕ(ПланОбмена.оду_ПланОбмена.ПустаяСсылка)";
	
	//Запрос.УстановитьПараметр("ПланОбмена", ПланОбмена);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВДЗ = РезультатЗапроса.Выбрать();
	
	Пока ВДЗ.Следующий() Цикл
		ВыгрузкаДанныхИзПланаОбменаПоУзлу(ВДЗ);	
	КонецЦикла;

	
	//ЗаписьСообщения = ПланыОбмена.СоздатьЗаписьСообщения();
	//ЗаписьXML = Новый ЗаписьXML;
	//ЗаписьXML.УстановитьСтроку();
	//ЗаписьСообщения.НачатьЗапись(ЗаписьXML, оду_УзелПланаОбмена);
	//НомерСообщения = ЗаписьСообщения.НомерСообщения;
	////НомерСообщения = 0;
	//
	//ФильтрОбмена = Новый Массив;
	//ФильтрОбмена.Добавить(РегистрыСведений.ЦеныНоменклатуры.СоздатьНаборЗаписей());
	//
	//ВДЗ = ПланыОбмена.ВыбратьИзменения(оду_УзелПланаОбмена, НомерСообщения);//, ФильтрОбмена);
	//
	//Данные = Новый Массив;
	//
	//Пока ВДЗ.Следующий() Цикл
	//	Зареганые = ВДЗ.Получить();
	//	Данные.Добавить(Зареганые);
	//КонецЦикла; 
	//
	//ЗаписьСообщения.ЗакончитьЗапись();
	//ЗаписьXML.Закрыть();
	//
	//Если Данные.Количество() = 0 Тогда 
	//	Отказ = Истина;
	//Иначе
	//	
	//	//ВыгрузкаРегистров();

	//	//Сообщение = Новый СообщениеПользователю;
	//	//Сообщение.Текст = НомерСообщения;
	//	//Сообщение.Сообщить(); 
	//	
	//КонецЕсли;
	
	Исключение
		пр_Ошибка = ОписаниеОшибки();
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = пр_Ошибка;
		Сообщение.Сообщить(); 
		//ОтправитьСообщениеВТелеграммПетрушка("РезультатОтправкиУведомленияУниверсальное", ДокОбъект.Ссылка, пр_Ошибка, , , , , СтруктураДанныхУведомления);
	  //Возврат Неопределено;
	КонецПопытки;
	 
	
	
КонецПроцедуры

Процедура ВыгрузкаДанныхИзПланаОбменаПоУзлу(ВыборкаУзлов)
	
	//пр_Модуль = пр_Общий.ИсполняемыйМодуль("оду_ОбщийПовтИсп", пр_НастройкиПовтИсп.ТекущийПользователь()); 
	//Если пр_Модуль = Неопределено Тогда
	//	пр_Модуль = оду_ОбщийПовтИсп;
	//КонецЕсли; 
	//
	//ПараметрыКонвертации = пр_Модуль.ПараметрыКонвертацииОбъекта();
	//
	//пр_Модуль = пр_Общий.ИсполняемыйМодуль("оду_Общий", ТекущийПользователь); 
	//
	//ИмяТипаXML = пр_Общий.ИмяТипаXMLПоСсылке(Объект1С);
	////ПереносТолькоСсылок = Ложь;
	//
	//МассивСсылок1С = Новый Массив;
	//МассивСсылок1С.Добавить(Объект1С);			
	//
	//
	//Если ДополнительныеСвойстваОбъекта = "" Тогда
	//	оду_ДополнительныеСвойстваОбъекта = ДополнительныеСвойстваОбъекта;	
	//Иначе
	//	оду_ДополнительныеСвойстваОбъекта = ЗначениеИзСтрокиВнутр(ДополнительныеСвойстваОбъекта); //Структура параметров	
	//КонецЕсли; 
	//
	//СоответвиеПараметровВыгрузки = Новый Соответствие();
	////СоответвиеПараметровВыгрузки.Вставить(ИмяТипаXML, Новый Структура("ОбъектДляПравилВыгрузки, ПереносТолькоСсылок", ДанныеОбмена, ПереносТолькоСсылок));		
	//
	////оду_СтруктураУО = Новый Структура("ИДБазыИсточник, ИДБазыПриемник"); 
	////оду_СтруктураУО.ИДБазыИсточник = ИДБазыИсточник;
	////оду_СтруктураУО.ИДБазыПриемник = ИДБазыПриемник;
	//
	//СтруктураПараметров = Новый Структура(); 
	////СтруктураПараметров.Вставить("оду_СтруктураУО", ЗначениеВСтрокуВнутр(оду_СтруктураУО));
	//СтруктураПараметров.Вставить("оду_МассивСсылок1С", МассивСсылок1С);
	//СтруктураПараметров.Вставить("оду_ДополнительныеСвойстваОбъекта", оду_ДополнительныеСвойстваОбъекта);
	//
	//СоответвиеПараметровВыгрузки.Вставить(ИмяТипаXML, СтруктураПараметров);		
	//
	////ИмяФайлаОбменаДалее = КонвертацияПутьКФайлуДанных;
	//НастройкиТекущейБД = оду_ОбщийПовтИсп.НастройкиТекущейБД();
	//
	//Если ЗначениеЗаполнено(КонвертацияПутьКФайлуДанных)  Тогда
	//	ИмяФайлаОбмена = КонвертацияПутьКФайлуДанных;
	//ИначеЕсли ЗначениеЗаполнено(КонвертацияПутьККаталогуДанных)  Тогда
	//	ИмяФайлаОбмена = пр_КлиентСервер.ВернутьПолныйПутьКфайлуПоДате(КонвертацияПутьККаталогуДанных, "Объект1С", "xml");//, "День");
	//Иначе
	//	ИмяБазыПриемника = пр_Общий.ДанныеИБПоСсылкам(УО, "Код", , "Структура").Код;
	//	ИмяФайлаОбмена = пр_Модуль.ИмяФайлаОбмена(НастройкиТекущейБД, ИмяБазыПриемника);
	//КонецЕсли; 
	//
	//ТаблицаСостоянийОбмена = оду_Общий.ТаблицаСостоянийОбмена();
	//Стр = ТаблицаСостоянийОбмена.Добавить();
	//ЗаполнитьЗначенияСвойств(Стр, ЭтотОбъект); 
	//
	//СтрокаОтветаОбмена = пр_Модуль.ВыполнитьВыгрузкуДанныхУОДКД2(ТаблицаСостоянийОбмена, СоответвиеПараметровВыгрузки, ИмяФайлаОбмена, , ПараметрыКонвертации);
	
КонецПроцедуры
 