
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Элементы.Номенклатура.Видимость = НЕ Параметры.ЗначенияЗаполнения.Свойство("Номенклатура");
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Не ЗначениеЗаполнено(Запись.НоменклатураКега) И Отказ = Ложь Тогда
	   РезультатСозданияНоменклатурыКега(Отказ);	
	КонецЕсли; 
КонецПроцедуры
 

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
КонецПроцедуры


&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	//Если  Тогда
	//
	//	
	//
	//КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	ЗаполнитьЗаписьНоменклатураКега();
КонецПроцедуры

&НаКлиенте
Процедура ТипКегиПриИзменении(Элемент)
	ЗаполнитьЗаписьНоменклатураКега();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ИмяТаблицы

#КонецОбласти

#Область ОбработчикиКомандФормы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ГруппаКеги()
	
	Попытка
		
		НаименованиеГруппы = "Кеги (НЕ ИСПОЛЬЗОВАТЬ)"; 
		ГруппаКеги = Справочники.Номенклатура.НайтиПоНаименованию(НаименованиеГруппы);	
		
		Если НЕ ЗначениеЗаполнено(ГруппаКеги)  Тогда
			ГруппаКеги = Справочники.Номенклатура.СоздатьГруппу();
			ГруппаКеги.Наименование = НаименованиеГруппы;
			ГруппаКеги.ОбменДанными.Загрузка = Истина;
			ГруппаКеги.Записать();
			
		КонецЕсли; 
		
		Возврат ГруппаКеги.Ссылка;
		
	Исключение
		пр_Ошибка = ОписаниеОшибки();
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = пр_Ошибка;
		Сообщение.Сообщить(); 
		//ОтправитьСообщениеВТелеграммПетрушка("РезультатОтправкиУведомленияУниверсальное", ДокОбъект.Ссылка, пр_Ошибка, , , , , СтруктураДанныхУведомления);
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции 

&НаСервере
Функция РезультатСозданияНоменклатурыКега(Отказ)
	
	Попытка
		
		ГруппаКеги = ГруппаКеги();
		Если НЕ ЗначениеЗаполнено(ГруппаКеги)  Тогда
			Отказ = Истина;
			Возврат Ложь;
		КонецЕсли; 
		
		НоменклатураКега = Справочники.Номенклатура.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(НоменклатураКега, Запись.Номенклатура, , "Владелец"); 
		
		НоменклатураКега.Родитель = ГруппаКеги;
		
		НоменклатураКега.Наименование = НаименованиеКеги;
		НоменклатураКега.ОбменДанными.Загрузка = Истина;
		НоменклатураКега.ДополнительныеСвойства.Вставить("аян_ЭтоНоменклатураКега");
		НоменклатураКега.Записать();
		
		//TODO:  Регистрация с доп. параметрами
		СсылкаКеги = НоменклатураКега.Ссылка;
		Запись.НоменклатураКега = СсылкаКеги;	
		
		оду_Общий.ЗарегистрироватьИзменениеОбъектаОбмена(НоменклатураКега, Отказ);
		
		Возврат Истина;

	Исключение
		пр_Ошибка = ОписаниеОшибки();
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = пр_Ошибка;
		Сообщение.Сообщить(); 
		//ОтправитьСообщениеВТелеграммПетрушка("РезультатОтправкиУведомленияУниверсальное", ДокОбъект.Ссылка, пр_Ошибка, , , , , СтруктураДанныхУведомления);
		Отказ = Истина;
		Возврат Ложь;
	КонецПопытки;
	 
КонецФункции 

&НаСервере
Процедура ТипКегиПриИзмененииНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Аян_ШтрихкодыКег.НоменклатураКега КАК НоменклатураКега
		|ИЗ
		|	РегистрСведений.Аян_ШтрихкодыКег КАК Аян_ШтрихкодыКег
		|ГДЕ
		|	Аян_ШтрихкодыКег.Номенклатура = &Номенклатура
		|	И Аян_ШтрихкодыКег.ТипКеги = &ТипКеги";
	
	Запрос.УстановитьПараметр("Номенклатура", Запись.Номенклатура);
	Запрос.УстановитьПараметр("ТипКеги", Запись.ТипКеги);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВДЗ = РезультатЗапроса.Выбрать();
	
	Если ВДЗ.Следующий() Тогда
		Запись.НоменклатураКега = ВДЗ.НоменклатураКега;	
	КонецЕсли; 
	
	НаименованиеКеги = НаименованиеКеги(Запись.Номенклатура, Запись.ТипКеги);
	
КонецПроцедуры


&НаСервереБезКонтекста
Функция НаименованиеКеги(Номенклатура, ТипКеги)
	НаименованиеТипКеги = СокрЛП(пр_Общий.ЗначениеРеквизитаПоСсылке(ТипКеги, "Код"));
	НаименованиеНоменклатуры = СокрЛП(пр_Общий.ЗначениеРеквизитаПоСсылке(Номенклатура, "Наименование"));
	Возврат СтрШаблон("%1 %2", НаименованиеТипКеги, НаименованиеНоменклатуры);
КонецФункции 


&НаСервере
Процедура ЗаполнитьЗаписьНоменклатураКега()
	Если ЗначениеЗаполнено(Запись.Номенклатура) И ЗначениеЗаполнено(Запись.ТипКеги)   Тогда
		ТипКегиПриИзмененииНаСервере();
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	// Вставить содержимое обработчика.
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункцииБСП

#КонецОбласти


